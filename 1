import time

# 获取当前时间的秒数
current_time = time.time()

# 获取当前时区和夏令时信息
time_info = time.localtime(current_time)
timezone_offset = time.timezone
dst_offset = time.daylight

# 计算时区偏移量
total_offset = timezone_offset + dst_offset

# 构造时间字符串
formatted_time = time.strftime('%a, %d %b %Y %H:%M:%S %z', time_info)

print("当前时间：", formatted_time)
print("时区偏移量：", total_offset)

(?<=<h1 class=\"package-header__name\">).+?(?=</h1>)


    "retry_count": 3,
    "title": "YouTube",
    "link": "https://m.youtube.com",
    "description": "在YouTube 上畅享您喜爱的视频和音乐，上传原创内容并与亲朋好友和全世界观众分享您的视频。",
    "icon": "https://static.vecteezy.com/system/resources/previews/003/399/771/original/youtube-icon-editorial-free-vector.jpg",
    "category": "TV &amp; Film"


<meta name="twitter:image" content="https://yt3.googleusercontent.com/ytc/AOPolaTlLtzjOe1Vu6Uw20-wOcXQmxEbSazYLeDDiRFh=s900-c-k-c0x00ffffff-no-rj"><meta name="twitter:app:name:iphone" content="YouTube"><meta name="twitter:app:id:iphone" content="544007664"><meta name="twitter:app:name:ipad" content="YouTube"><meta name="twitter:app:id:ipad" content="544007664"><meta name="twitter:app:url:iphone" content="vnd.youtube://www.youtube.com/channel/UCghLs6s95LrBWOdlZUCH4qw"><meta name="twitter:app:url:ipad" content="vnd.youtube://www.youtube.com/channel/UCghLs6s95LrBWOdlZUCH4qw"><meta name="twitter:app:name:googleplay" content="YouTube"><meta name="twitter:app:id:googleplay" content="com.google.android.youtube"><meta name="twitter:app:url:googleplay" content="https://www.youtube.com/channel/UCghLs6s95LrBWOdlZUCH4qw"><link itemprop="url" href="https://www.youtube.com/channel/UCghLs6s95LrBWOdlZUCH4qw"><meta itemprop="name" content="stone记"><meta itemprop="description" content="第二个频道的链接
https://www.youtube.com/@stone.pistol.stoneji
合作联系Twitter：stone记@stone62855987



channelid_youtube_ids




re.search(r"(?<=\<p class\=\"release__version\"\>.+(?=\<\/p\>),


02:55:35|yt-dlp已安装
02:55:39|yt-dlp更新成功
02:22:42|已读取配置文件
02:22:42|已读取youtube频道信息
02:22:42|bilibili频道信息不存在
02:22:42|读取youtube频道的channelid成功
02:22:43|YouTube频道 youtube 已更新
02:22:43|YouTube频道 stone记 已更新
02:22:44|YouTube频道 四季妈妈—小龙 已更新
02:22:44|需更新的YouTube频道:stone记
02:23:22|已获取原始rss文件
02:23:22|youtube 播客已更新|地址: https://raw.githubusercontent.com/gruel-zxz/podflow/main/channel_rss/UCBR8-60-B28hp2BmDPdntcQ.xml
02:23:23|stone记 播客已更新|地址: https://raw.githubusercontent.com/gruel-zxz/podflow/main/channel_rss/UCghLs6s95LrBWOdlZUCH4qw.xml
02:23:23|四季妈妈—小龙 播客已更新|地址: https://raw.githubusercontent.com/gruel-zxz/podflow/main/channel_rss/UC3elWG-AxVvIF2_xPQb1rkQ.xml
02:23:23|主播客已更新|地址: https://raw.githubusercontent.com/gruel-zxz/podflow/main/YouTube.xml
02:23:23|stone记|OP2ot76tfrk.m4a已删除
[youtube] Extracting URL: https://www.youtube.com/watch?v=U1bMzfBrxEU
[youtube] U1bMzfBrxEU: Downloading webpage
[youtube] U1bMzfBrxEU: Downloading ios player API JSON
[youtube] U1bMzfBrxEU: Downloading android player API JSON
[youtube] U1bMzfBrxEU: Downloading m3u8 information
[youtube] Extracting URL: https://www.youtube.com/watch?v=U1bMzfBrxEU
[youtube] U1bMzfBrxEU: Downloading webpage
[youtube] U1bMzfBrxEU: Downloading ios player API JSON
[youtube] U1bMzfBrxEU: Downloading android player API JSON
[youtube] U1bMzfBrxEU: Downloading m3u8 information
[info] U1bMzfBrxEU: Downloading 1 format(s): 140
[download] Destination: UCghLs6s95LrBWOdlZUCH4qw/U1bMzfBrxEU.m4a
[download] 100% of    7.69MiB in 00:00:00 at 52.14MiB/s    
[FixupM4a] Correcting container of "UCghLs6s95LrBWOdlZUCH4qw/U1bMzfBrxEU.m4a"
02:22:47|U1bMzfBrxEU下载成功
[youtube] Extracting URL: https://www.youtube.com/watch?v=2sc5uUDzigA
[youtube] 2sc5uUDzigA: Downloading webpage
[youtube] 2sc5uUDzigA: Downloading ios player API JSON
[youtube] 2sc5uUDzigA: Downloading android player API JSON
[youtube] 2sc5uUDzigA: Downloading m3u8 information
[youtube] Extracting URL: https://www.youtube.com/watch?v=2sc5uUDzigA
[youtube] 2sc5uUDzigA: Downloading webpage
[youtube] 2sc5uUDzigA: Downloading ios player API JSON
[youtube] 2sc5uUDzigA: Downloading android player API JSON
[youtube] 2sc5uUDzigA: Downloading m3u8 information
[info] 2sc5uUDzigA: Downloading 1 format(s): 140
[download] Destination: UCghLs6s95LrBWOdlZUCH4qw/2sc5uUDzigA.m4a
[download] 100% of   24.86MiB in 00:00:00 at 38.26MiB/s    
[FixupM4a] Correcting container of "UCghLs6s95LrBWOdlZUCH4qw/2sc5uUDzigA.m4a"
02:22:52|2sc5uUDzigA下载成功
[youtube] Extracting URL: https://www.youtube.com/watch?v=DeAE5Zacgkg
[youtube] DeAE5Zacgkg: Downloading webpage
[youtube] DeAE5Zacgkg: Downloading ios player API JSON
[youtube] DeAE5Zacgkg: Downloading android player API JSON
[youtube] DeAE5Zacgkg: Downloading m3u8 information
[youtube] Extracting URL: https://www.youtube.com/watch?v=DeAE5Zacgkg
[youtube] DeAE5Zacgkg: Downloading webpage
[youtube] DeAE5Zacgkg: Downloading ios player API JSON
[youtube] DeAE5Zacgkg: Downloading android player API JSON
[youtube] DeAE5Zacgkg: Downloading m3u8 information
[info] DeAE5Zacgkg: Downloading 1 format(s): 140
[download] Destination: UCghLs6s95LrBWOdlZUCH4qw/DeAE5Zacgkg.m4a
[download] 100% of   11.49MiB in 00:00:00 at 91.41MiB/s    
[FixupM4a] Correcting container of "UCghLs6s95LrBWOdlZUCH4qw/DeAE5Zacgkg.m4a"
02:22:56|DeAE5Zacgkg下载成功
[youtube] Extracting URL: https://www.youtube.com/watch?v=hkX6cGSiQLc
[youtube] hkX6cGSiQLc: Downloading webpage
[youtube] hkX6cGSiQLc: Downloading ios player API JSON
[youtube] hkX6cGSiQLc: Downloading android player API JSON
[youtube] hkX6cGSiQLc: Downloading m3u8 information
[youtube] Extracting URL: https://www.youtube.com/watch?v=hkX6cGSiQLc
[youtube] hkX6cGSiQLc: Downloading webpage
[youtube] hkX6cGSiQLc: Downloading ios player API JSON
[youtube] hkX6cGSiQLc: Downloading android player API JSON
[youtube] hkX6cGSiQLc: Downloading m3u8 information
[info] hkX6cGSiQLc: Downloading 1 format(s): 140
[download] Destination: UCghLs6s95LrBWOdlZUCH4qw/hkX6cGSiQLc.m4a
[download] 100% of   17.49MiB in 00:00:00 at 153.02MiB/s   
[FixupM4a] Correcting container of "UCghLs6s95LrBWOdlZUCH4qw/hkX6cGSiQLc.m4a"
02:23:00|hkX6cGSiQLc下载成功
[youtube] Extracting URL: https://www.youtube.com/watch?v=LyMCSThEa2E
[youtube] LyMCSThEa2E: Downloading webpage
[youtube] LyMCSThEa2E: Downloading ios player API JSON
[youtube] LyMCSThEa2E: Downloading android player API JSON
[youtube] LyMCSThEa2E: Downloading m3u8 information
[youtube] Extracting URL: https://www.youtube.com/watch?v=LyMCSThEa2E
[youtube] LyMCSThEa2E: Downloading webpage
[youtube] LyMCSThEa2E: Downloading ios player API JSON
[youtube] LyMCSThEa2E: Downloading android player API JSON
[youtube] LyMCSThEa2E: Downloading m3u8 information
[info] LyMCSThEa2E: Downloading 1 format(s): 140
[download] Destination: UCghLs6s95LrBWOdlZUCH4qw/LyMCSThEa2E.m4a
[download] 100% of   14.35MiB in 00:00:00 at 147.61MiB/s   
[FixupM4a] Correcting container of "UCghLs6s95LrBWOdlZUCH4qw/LyMCSThEa2E.m4a"
02:23:04|LyMCSThEa2E下载成功
[youtube] Extracting URL: https://www.youtube.com/watch?v=25syFaDH5kU
[youtube] 25syFaDH5kU: Downloading webpage
[youtube] 25syFaDH5kU: Downloading ios player API JSON
[youtube] 25syFaDH5kU: Downloading android player API JSON
[youtube] 25syFaDH5kU: Downloading m3u8 information
[youtube] Extracting URL: https://www.youtube.com/watch?v=25syFaDH5kU
[youtube] 25syFaDH5kU: Downloading webpage
[youtube] 25syFaDH5kU: Downloading ios player API JSON
[youtube] 25syFaDH5kU: Downloading android player API JSON
[youtube] 25syFaDH5kU: Downloading m3u8 information
[info] 25syFaDH5kU: Downloading 1 format(s): 140
[download] Destination: UCghLs6s95LrBWOdlZUCH4qw/25syFaDH5kU.m4a
[download] 100% of   15.34MiB in 00:00:00 at 38.40MiB/s    
[FixupM4a] Correcting container of "UCghLs6s95LrBWOdlZUCH4qw/25syFaDH5kU.m4a"
02:23:08|25syFaDH5kU下载成功
[youtube] Extracting URL: https://www.youtube.com/watch?v=tSOF97oi62o
[youtube] tSOF97oi62o: Downloading webpage
[youtube] tSOF97oi62o: Downloading ios player API JSON
[youtube] tSOF97oi62o: Downloading android player API JSON
[youtube] tSOF97oi62o: Downloading m3u8 information
[youtube] Extracting URL: https://www.youtube.com/watch?v=tSOF97oi62o
[youtube] tSOF97oi62o: Downloading webpage
[youtube] tSOF97oi62o: Downloading ios player API JSON
[youtube] tSOF97oi62o: Downloading android player API JSON
[youtube] tSOF97oi62o: Downloading m3u8 information
[info] tSOF97oi62o: Downloading 1 format(s): 140
[download] Destination: UCghLs6s95LrBWOdlZUCH4qw/tSOF97oi62o.m4a
[download] 100% of    8.50MiB in 00:00:00 at 140.26MiB/s 
[FixupM4a] Correcting container of "UCghLs6s95LrBWOdlZUCH4qw/tSOF97oi62o.m4a"
02:23:11|tSOF97oi62o下载成功
[youtube] Extracting URL: https://www.youtube.com/watch?v=xugZyhCWNLc
[youtube] xugZyhCWNLc: Downloading webpage
[youtube] xugZyhCWNLc: Downloading ios player API JSON
[youtube] xugZyhCWNLc: Downloading android player API JSON
[youtube] xugZyhCWNLc: Downloading m3u8 information
[youtube] Extracting URL: https://www.youtube.com/watch?v=xugZyhCWNLc
[youtube] xugZyhCWNLc: Downloading webpage
[youtube] xugZyhCWNLc: Downloading ios player API JSON
[youtube] xugZyhCWNLc: Downloading android player API JSON
[youtube] xugZyhCWNLc: Downloading m3u8 information
[info] xugZyhCWNLc: Downloading 1 format(s): 140
[download] Destination: UCghLs6s95LrBWOdlZUCH4qw/xugZyhCWNLc.m4a
[download] 100% of    9.77MiB in 00:00:00 at 114.07MiB/s   
[FixupM4a] Correcting container of "UCghLs6s95LrBWOdlZUCH4qw/xugZyhCWNLc.m4a"
02:23:15|xugZyhCWNLc下载成功
[youtube] Extracting URL: https://www.youtube.com/watch?v=Vv7KPDqfaz4
[youtube] Vv7KPDqfaz4: Downloading webpage
[youtube] Vv7KPDqfaz4: Downloading ios player API JSON
[youtube] Vv7KPDqfaz4: Downloading android player API JSON
[youtube] Vv7KPDqfaz4: Downloading m3u8 information
[youtube] Extracting URL: https://www.youtube.com/watch?v=Vv7KPDqfaz4
[youtube] Vv7KPDqfaz4: Downloading webpage
[youtube] Vv7KPDqfaz4: Downloading ios player API JSON
[youtube] Vv7KPDqfaz4: Downloading android player API JSON
[youtube] Vv7KPDqfaz4: Downloading m3u8 information
[info] Vv7KPDqfaz4: Downloading 1 format(s): 140
[download] Destination: UCghLs6s95LrBWOdlZUCH4qw/Vv7KPDqfaz4.m4a
[download] 100% of   13.52MiB in 00:00:00 at 38.84MiB/s    
[FixupM4a] Correcting container of "UCghLs6s95LrBWOdlZUCH4qw/Vv7KPDqfaz4.m4a"
02:23:18|Vv7KPDqfaz4下载成功
[youtube] Extracting URL: https://www.youtube.com/watch?v=cvdlvPQFANw
[youtube] cvdlvPQFANw: Downloading webpage
[youtube] cvdlvPQFANw: Downloading ios player API JSON
[youtube] cvdlvPQFANw: Downloading android player API JSON
[youtube] cvdlvPQFANw: Downloading m3u8 information
[youtube] Extracting URL: https://www.youtube.com/watch?v=cvdlvPQFANw
[youtube] cvdlvPQFANw: Downloading webpage
[youtube] cvdlvPQFANw: Downloading ios player API JSON
[youtube] cvdlvPQFANw: Downloading android player API JSON
[youtube] cvdlvPQFANw: Downloading m3u8 information
[info] cvdlvPQFANw: Downloading 1 format(s): 140
[download] Destination: UCghLs6s95LrBWOdlZUCH4qw/cvdlvPQFANw.m4a
[download] 100% of    4.38MiB in 00:00:00 at 28.53MiB/s  
[FixupM4a] Correcting container of "UCghLs6s95LrBWOdlZUCH4qw/cvdlvPQFANw.m4a"
02:23:22|cvdlvPQFANw下载成功
...
                                use it for. Currently supports native,
                                aria2c, avconv, axel, curl, ffmpeg, httpie,
                                wget. You can use this option multiple times
                                to set different downloaders for different
                                protocols. E.g. --downloader aria2c
                                --downloader "dash,m3u8:native" will use
                                aria2c for http/ftp downloads, and the
                                native downloader for dash/m3u8 downloads
                                (Alias: --external-downloader)
--downloader-args NAME:ARGS     Give these arguments to the external
                                downloader. Specify the downloader name and
                                the arguments separated by a colon ":". For
                                ffmpeg, arguments can be passed to different
                                positions using the same syntax as
                                --postprocessor-args. You can use this
                                option multiple times to give different
                                arguments to different downloaders (Alias:
                                --external-downloader-args)
</code></pre>
<h2>Filesystem Options:</h2>
<pre><code>-a, --batch-file FILE           File containing URLs to download ("-" for
                                stdin), one URL per line. Lines starting
                                with "#", ";" or "]" are considered as
                                comments and ignored
--no-batch-file                 Do not read URLs from batch file (default)
-P, --paths [TYPES:]PATH        The paths where the files should be
                                downloaded. Specify the type of file and the
                                path separated by a colon ":". All the same
                                TYPES as --output are supported.
                                Additionally, you can also provide "home"
                                (default) and "temp" paths. All intermediary
                                files are first downloaded to the temp path
                                and then the final files are moved over to
                                the home path after download is finished.
                                This option is ignored if --output is an
                                absolute path
-o, --output [TYPES:]TEMPLATE   Output filename template; see "OUTPUT
                                TEMPLATE" for details
--output-na-placeholder TEXT    Placeholder for unavailable fields in
                                "OUTPUT TEMPLATE" (default: "NA")
--restrict-filenames            Restrict filenames to only ASCII characters,
                                and avoid "&amp;" and spaces in filenames
--no-restrict-filenames         Allow Unicode characters, "&amp;" and spaces in
                                filenames (default)
--windows-filenames             Force filenames to be Windows-compatible
--no-windows-filenames          Make filenames Windows-compatible only if
                                using Windows (default)
--trim-filenames LENGTH         Limit the filename length (excluding
                                extension) to the specified number of
                                characters
-w, --no-overwrites             Do not overwrite any files
--force-overwrites              Overwrite all video and metadata files. This
                                option includes --no-continue
--no-force-overwrites           Do not overwrite the video, but overwrite
                                related files (default)
-c, --continue                  Resume partially downloaded files/fragments
                                (default)
--no-continue                   Do not resume partially downloaded
                                fragments. If the file is not fragmented,
                                restart download of the entire file
--part                          Use .part files instead of writing directly
                                into output file (default)
--no-part                       Do not use .part files - write directly into
                                output file
--mtime                         Use the Last-modified header to set the file
                                modification time (default)
--no-mtime                      Do not use the Last-modified header to set
                                the file modification time
--write-description             Write video description to a .description file
--no-write-description          Do not write video description (default)
--write-info-json               Write video metadata to a .info.json file
                                (this may contain personal information)
--no-write-info-json            Do not write video metadata (default)
--write-playlist-metafiles      Write playlist metadata in addition to the
                                video metadata when using --write-info-json,
                                --write-description etc. (default)
--no-write-playlist-metafiles   Do not write playlist metadata when using
                                --write-info-json, --write-description etc.
--clean-info-json               Remove some internal metadata such as
                                filenames from the infojson (default)
--no-clean-info-json            Write all fields to the infojson
--write-comments                Retrieve video comments to be placed in the
                                infojson. The comments are fetched even
                                without this option if the extraction is
                                known to be quick (Alias: --get-comments)
--no-write-comments             Do not retrieve video comments unless the
                                extraction is known to be quick (Alias:
                                --no-get-comments)
--load-info-json FILE           JSON file containing the video information
                                (created with the "--write-info-json" option)
--cookies FILE                  Netscape formatted file to read cookies from
                                and dump cookie jar in
--no-cookies                    Do not read/dump cookies from/to file
                                (default)
--cookies-from-browser BROWSER[+KEYRING][:PROFILE][::CONTAINER]
                                The name of the browser to load cookies
                                from. Currently supported browsers are:
                                brave, chrome, chromium, edge, firefox,
                                opera, safari, vivaldi. Optionally, the
                                KEYRING used for decrypting Chromium cookies
                                on Linux, the name/path of the PROFILE to
                                load cookies from, and the CONTAINER name
                                (if Firefox) ("none" for no container) can
                                be given with their respective seperators.
                                By default, all containers of the most
                                recently accessed profile are used.
                                Currently supported keyrings are: basictext,
                                gnomekeyring, kwallet, kwallet5, kwallet6
--no-cookies-from-browser       Do not load cookies from browser (default)
--cache-dir DIR                 Location in the filesystem where yt-dlp can
                                store some downloaded information (such as
                                client ids and signatures) permanently. By
                                default ${XDG_CACHE_HOME}/yt-dlp
--no-cache-dir                  Disable filesystem caching
--rm-cache-dir                  Delete all filesystem cache files
</code></pre>
<h2>Thumbnail Options:</h2>
<pre><code>--write-thumbnail               Write thumbnail image to disk
--no-write-thumbnail            Do not write thumbnail image to disk (default)
--write-all-thumbnails          Write all thumbnail image formats to disk
--list-thumbnails               List available thumbnails of each video.
                                Simulate unless --no-simulate is used
</code></pre>
<h2>Internet Shortcut Options:</h2>
<pre><code>--write-link                    Write an internet shortcut file, depending
                                on the current platform (.url, .webloc or
                                .desktop). The URL may be cached by the OS
--write-url-link                Write a .url Windows internet shortcut. The
                                OS caches the URL based on the file path
--write-webloc-link             Write a .webloc macOS internet shortcut
--write-desktop-link            Write a .desktop Linux internet shortcut
</code></pre>
<h2>Verbosity and Simulation Options:</h2>
<pre><code>-q, --quiet                     Activate quiet mode. If used with --verbose,
                                print the log to stderr
--no-quiet                      Deactivate quiet mode. (Default)
--no-warnings                   Ignore warnings
-s, --simulate                  Do not download the video and do not write
                                anything to disk
--no-simulate                   Download the video even if printing/listing
                                options are used
--ignore-no-formats-error       Ignore "No video formats" error. Useful for
                                extracting metadata even if the videos are
                                not actually available for download
                                (experimental)
--no-ignore-no-formats-error    Throw error when no downloadable video
                                formats are found (default)
--skip-download                 Do not download the video but write all
                                related files (Alias: --no-download)
-O, --print [WHEN:]TEMPLATE     Field name or output template to print to
                                screen, optionally prefixed with when to
                                print it, separated by a ":". Supported
                                values of "WHEN" are the same as that of
                                --use-postprocessor (default: video).
                                Implies --quiet. Implies --simulate unless
                                --no-simulate or later stages of WHEN are
                                used. This option can be used multiple times
--print-to-file [WHEN:]TEMPLATE FILE
                                Append given template to the file. The
                                values of WHEN and TEMPLATE are same as that
                                of --print. FILE uses the same syntax as the
                                output template. This option can be used
                                multiple times
-j, --dump-json                 Quiet, but print JSON information for each
                                video. Simulate unless --no-simulate is
                                used. See "OUTPUT TEMPLATE" for a
                                description of available keys
-J, --dump-single-json          Quiet, but print JSON information for each
                                url or infojson passed. Simulate unless
                                --no-simulate is used. If the URL refers to
                                a playlist, the whole playlist information
                                is dumped in a single line
--force-write-archive           Force download archive entries to be written
                                as far as no errors occur, even if -s or
                                another simulation option is used (Alias:
                                --force-download-archive)
--newline                       Output progress bar as new lines
--no-progress                   Do not print progress bar
--progress                      Show progress bar, even if in quiet mode
--console-title                 Display progress in console titlebar
--progress-template [TYPES:]TEMPLATE
                                Template for progress outputs, optionally
                                prefixed with one of "download:" (default),
                                "download-title:" (the console title),
                                "postprocess:",  or "postprocess-title:".
                                The video's fields are accessible under the
                                "info" key and the progress attributes are
                                accessible under "progress" key. E.g.
                                --console-title --progress-template
                                "download-title:%(info.id)s-%(progress.eta)s"
-v, --verbose                   Print various debugging information
--dump-pages                    Print downloaded pages encoded using base64
                                to debug problems (very verbose)
--write-pages                   Write downloaded intermediary pages to files
                                in the current directory to debug problems
--print-traffic                 Display sent and read HTTP traffic
</code></pre>
<h2>Workarounds:</h2>
<pre><code>--encoding ENCODING             Force the specified encoding (experimental)
--legacy-server-connect         Explicitly allow HTTPS connection to servers
                                that do not support RFC 5746 secure
                                renegotiation
--no-check-certificates         Suppress HTTPS certificate validation
--prefer-insecure               Use an unencrypted connection to retrieve
                                information about the video (Currently
                                supported only for YouTube)
--add-headers FIELD:VALUE       Specify a custom HTTP header and its value,
                                separated by a colon ":". You can use this
                                option multiple times
--bidi-workaround               Work around terminals that lack
                                bidirectional text support. Requires bidiv
                                or fribidi executable in PATH
--sleep-requests SECONDS        Number of seconds to sleep between requests
                                during data extraction
--sleep-interval SECONDS        Number of seconds to sleep before each
                                download. This is the minimum time to sleep
                                when used along with --max-sleep-interval
                                (Alias: --min-sleep-interval)
--max-sleep-interval SECONDS    Maximum number of seconds to sleep. Can only
                                be used along with --min-sleep-interval
--sleep-subtitles SECONDS       Number of seconds to sleep before each
                                subtitle download
</code></pre>
<h2>Video Format Options:</h2>
<pre><code>-f, --format FORMAT             Video format code, see "FORMAT SELECTION"
                                for more details
-S, --format-sort SORTORDER     Sort the formats by the fields given, see
                                "Sorting Formats" for more details
--format-sort-force             Force user specified sort order to have
                                precedence over all fields, see "Sorting
                                Formats" for more details (Alias: --S-force)
--no-format-sort-force          Some fields have precedence over the user
                                specified sort order (default)
--video-multistreams            Allow multiple video streams to be merged
                                into a single file
--no-video-multistreams         Only one video stream is downloaded for each
                                output file (default)
--audio-multistreams            Allow multiple audio streams to be merged
                                into a single file
--no-audio-multistreams         Only one audio stream is downloaded for each
                                output file (default)
--prefer-free-formats           Prefer video formats with free containers
                                over non-free ones of same quality. Use with
                                "-S ext" to strictly prefer free containers
                                irrespective of quality
--no-prefer-free-formats        Don't give any special preference to free
                                containers (default)
--check-formats                 Make sure formats are selected only from
                                those that are actually downloadable
--check-all-formats             Check all formats for whether they are
                                actually downloadable
--no-check-formats              Do not check that the formats are actually
                                downloadable
-F, --list-formats              List available formats of each video.
                                Simulate unless --no-simulate is used
--merge-output-format FORMAT    Containers that may be used when merging
                                formats, separated by "/", e.g. "mp4/mkv".
                                Ignored if no merge is required. (currently
                                supported: avi, flv, mkv, mov, mp4, webm)
</code></pre>
<h2>Subtitle Options:</h2>
<pre><code>--write-subs                    Write subtitle file
--no-write-subs                 Do not write subtitle file (default)
--write-auto-subs               Write automatically generated subtitle file
                                (Alias: --write-automatic-subs)
--no-write-auto-subs            Do not write auto-generated subtitles
                                (default) (Alias: --no-write-automatic-subs)
--list-subs                     List available subtitles of each video.
                                Simulate unless --no-simulate is used
--sub-format FORMAT             Subtitle format; accepts formats preference,
                                e.g. "srt" or "ass/srt/best"
--sub-langs LANGS               Languages of the subtitles to download (can
                                be regex) or "all" separated by commas, e.g.
                                --sub-langs "en.*,ja". You can prefix the
                                language code with a "-" to exclude it from
                                the requested languages, e.g. --sub-langs
                                all,-live_chat. Use --list-subs for a list
                                of available language tags
</code></pre>
<h2>Authentication Options:</h2>
<pre><code>-u, --username USERNAME         Login with this account ID
-p, --password PASSWORD         Account password. If this option is left
                                out, yt-dlp will ask interactively
-2, --twofactor TWOFACTOR       Two-factor authentication code
-n, --netrc                     Use .netrc authentication data
--netrc-location PATH           Location of .netrc authentication data;
                                either the path or its containing directory.
                                Defaults to ~/.netrc
--netrc-cmd NETRC_CMD           Command to execute to get the credentials
                                for an extractor.
--video-password PASSWORD       Video password (vimeo, youku)
--ap-mso MSO                    Adobe Pass multiple-system operator (TV
                                provider) identifier, use --ap-list-mso for
                                a list of available MSOs
--ap-username USERNAME          Multiple-system operator account login
--ap-password PASSWORD          Multiple-system operator account password.
                                If this option is left out, yt-dlp will ask
                                interactively
--ap-list-mso                   List all supported multiple-system operators
--client-certificate CERTFILE   Path to client certificate file in PEM
                                format. May include the private key
--client-certificate-key KEYFILE
                                Path to private key file for client
                                certificate
--client-certificate-password PASSWORD
                                Password for client certificate private key,
                                if encrypted. If not provided, and the key
                                is encrypted, yt-dlp will ask interactively
</code></pre>
<h2>Post-Processing Options:</h2>
<pre><code>-x, --extract-audio             Convert video files to audio-only files
                                (requires ffmpeg and ffprobe)
--audio-format FORMAT           Format to convert the audio to when -x is
                                used. (currently supported: best (default),
                                aac, alac, flac, m4a, mp3, opus, vorbis,
                                wav). You can specify multiple rules using
                                similar syntax as --remux-video
--audio-quality QUALITY         Specify ffmpeg audio quality to use when
                                converting the audio with -x. Insert a value
                                between 0 (best) and 10 (worst) for VBR or a
                                specific bitrate like 128K (default 5)
--remux-video FORMAT            Remux the video into another container if
                                necessary (currently supported: avi, flv,
                                gif, mkv, mov, mp4, webm, aac, aiff, alac,
                                flac, m4a, mka, mp3, ogg, opus, vorbis,
                                wav). If target container does not support
                                the video/audio codec, remuxing will fail.
                                You can specify multiple rules; e.g.
                                "aac&gt;m4a/mov&gt;mp4/mkv" will remux aac to m4a,
                                mov to mp4 and anything else to mkv
--recode-video FORMAT           Re-encode the video into another format if
                                necessary. The syntax and supported formats
                                are the same as --remux-video
--postprocessor-args NAME:ARGS  Give these arguments to the postprocessors.
                                Specify the postprocessor/executable name
                                and the arguments separated by a colon ":"
                                to give the argument to the specified
                                postprocessor/executable. Supported PP are:
                                Merger, ModifyChapters, SplitChapters,
                                ExtractAudio, VideoRemuxer, VideoConvertor,
                                Metadata, EmbedSubtitle, EmbedThumbnail,
                                SubtitlesConvertor, ThumbnailsConvertor,
                                FixupStretched, FixupM4a, FixupM3u8,
                                FixupTimestamp and FixupDuration. The
                                supported executables are: AtomicParsley,
                                FFmpeg and FFprobe. You can also specify
                                "PP+EXE:ARGS" to give the arguments to the
                                specified executable only when being used by
                                the specified postprocessor. Additionally,
                                for ffmpeg/ffprobe, "_i"/"_o" can be
                                appended to the prefix optionally followed
                                by a number to pass the argument before the
                                specified input/output file, e.g. --ppa
                                "Merger+ffmpeg_i1:-v quiet". You can use
                                this option multiple times to give different
                                arguments to different postprocessors.
                                (Alias: --ppa)
-k, --keep-video                Keep the intermediate video file on disk
                                after post-processing
--no-keep-video                 Delete the intermediate video file after
                                post-processing (default)
--post-overwrites               Overwrite post-processed files (default)
--no-post-overwrites            Do not overwrite post-processed files
--embed-subs                    Embed subtitles in the video (only for mp4,
                                webm and mkv videos)
--no-embed-subs                 Do not embed subtitles (default)
--embed-thumbnail               Embed thumbnail in the video as cover art
--no-embed-thumbnail            Do not embed thumbnail (default)
--embed-metadata                Embed metadata to the video file. Also
                                embeds chapters/infojson if present unless
                                --no-embed-chapters/--no-embed-info-json are
                                used (Alias: --add-metadata)
--no-embed-metadata             Do not add metadata to file (default)
                                (Alias: --no-add-metadata)
--embed-chapters                Add chapter markers to the video file
                                (Alias: --add-chapters)
--no-embed-chapters             Do not add chapter markers (default) (Alias:
                                --no-add-chapters)
--embed-info-json               Embed the infojson as an attachment to
                                mkv/mka video files
--no-embed-info-json            Do not embed the infojson as an attachment
                                to the video file
--parse-metadata [WHEN:]FROM:TO
                                Parse additional metadata like title/artist
                                from other fields; see "MODIFYING METADATA"
                                for details. Supported values of "WHEN" are
                                the same as that of --use-postprocessor
                                (default: pre_process)
--replace-in-metadata [WHEN:]FIELDS REGEX REPLACE
                                Replace text in a metadata field using the
                                given regex. This option can be used
                                multiple times. Supported values of "WHEN"
                                are the same as that of --use-postprocessor
                                (default: pre_process)
--xattrs                        Write metadata to the video file's xattrs
                                (using dublin core and xdg standards)
--concat-playlist POLICY        Concatenate videos in a playlist. One of
                                "never", "always", or "multi_video"
                                (default; only when the videos form a single
                                show). All the video files must have same
                                codecs and number of streams to be
                                concatable. The "pl_video:" prefix can be
                                used with "--paths" and "--output" to set
                                the output filename for the concatenated
                                files. See "OUTPUT TEMPLATE" for details
--fixup POLICY                  Automatically correct known faults of the
                                file. One of never (do nothing), warn (only
                                emit a warning), detect_or_warn (the
                                default; fix file if we can, warn
                                otherwise), force (try fixing even if file
                                already exists)
--ffmpeg-location PATH          Location of the ffmpeg binary; either the
                                path to the binary or its containing directory
--exec [WHEN:]CMD               Execute a command, optionally prefixed with
                                when to execute it, separated by a ":".
                                Supported values of "WHEN" are the same as
                                that of --use-postprocessor (default:
                                after_move). Same syntax as the output
                                template can be used to pass any field as
                                arguments to the command. If no fields are
                                passed, %(filepath,_filename|)q is appended
                                to the end of the command. This option can
                                be used multiple times
--no-exec                       Remove any previously defined --exec
--convert-subs FORMAT           Convert the subtitles to another format
                                (currently supported: ass, lrc, srt, vtt)
                                (Alias: --convert-subtitles)
--convert-thumbnails FORMAT     Convert the thumbnails to another format
                                (currently supported: jpg, png, webp). You
                                can specify multiple rules using similar
                                syntax as --remux-video
--split-chapters                Split video into multiple files based on
                                internal chapters. The "chapter:" prefix can
                                be used with "--paths" and "--output" to set
                                the output filename for the split files. See
                                "OUTPUT TEMPLATE" for details
--no-split-chapters             Do not split video based on chapters (default)
--remove-chapters REGEX         Remove chapters whose title matches the
                                given regular expression. The syntax is the
                                same as --download-sections. This option can
                                be used multiple times
--no-remove-chapters            Do not remove any chapters from the file
                                (default)
--force-keyframes-at-cuts       Force keyframes at cuts when
                                downloading/splitting/removing sections.
                                This is slow due to needing a re-encode, but
                                the resulting video may have fewer artifacts
                                around the cuts
--no-force-keyframes-at-cuts    Do not force keyframes around the chapters
                                when cutting/splitting (default)
--use-postprocessor NAME[:ARGS]
                                The (case sensitive) name of plugin
                                postprocessors to be enabled, and
                                (optionally) arguments to be passed to it,
                                separated by a colon ":". ARGS are a
                                semicolon ";" delimited list of NAME=VALUE.
                                The "when" argument determines when the
                                postprocessor is invoked. It can be one of
                                "pre_process" (after video extraction),
                                "after_filter" (after video passes filter),
                                "video" (after --format; before
                                --print/--output), "before_dl" (before each
                                video download), "post_process" (after each
                                video download; default), "after_move"
                                (after moving video file to it's final
                                locations), "after_video" (after downloading
                                and processing all formats of a video), or
                                "playlist" (at end of playlist). This option
                                can be used multiple times to add different
                                postprocessors
</code></pre>
<h2>SponsorBlock Options:</h2>
<p>Make chapter entries for, or remove various segments (sponsor,
introductions, etc.) from downloaded YouTube videos using the
<a href="https://sponsor.ajay.app" rel=nofollow>SponsorBlock API</a></p>
<pre><code>--sponsorblock-mark CATS        SponsorBlock categories to create chapters
                                for, separated by commas. Available
                                categories are sponsor, intro, outro,
                                selfpromo, preview, filler, interaction,
                                music_offtopic, poi_highlight, chapter, all
                                and default (=all). You can prefix the
                                category with a "-" to exclude it. See [1]
                                for description of the categories. E.g.
                                --sponsorblock-mark all,-preview
                                [1] https://wiki.sponsor.ajay.app/w/Segment_Categories
--sponsorblock-remove CATS      SponsorBlock categories to be removed from
                                the video file, separated by commas. If a
                                category is present in both mark and remove,
                                remove takes precedence. The syntax and
                                available categories are the same as for
                                --sponsorblock-mark except that "default"
                                refers to "all,-filler" and poi_highlight,
                                chapter are not available
--sponsorblock-chapter-title TEMPLATE
                                An output template for the title of the
                                SponsorBlock chapters created by
                                --sponsorblock-mark. The only available
                                fields are start_time, end_time, category,
                                categories, name, category_names. Defaults
                                to "[SponsorBlock]: %(category_names)l"
--no-sponsorblock               Disable both --sponsorblock-mark and
                                --sponsorblock-remove
--sponsorblock-api URL          SponsorBlock API location, defaults to
                                https://sponsor.ajay.app
</code></pre>
<h2>Extractor Options:</h2>
<pre><code>--extractor-retries RETRIES     Number of retries for known extractor errors
                                (default is 3), or "infinite"
--allow-dynamic-mpd             Process dynamic DASH manifests (default)
                                (Alias: --no-ignore-dynamic-mpd)
--ignore-dynamic-mpd            Do not process dynamic DASH manifests
                                (Alias: --no-allow-dynamic-mpd)
--hls-split-discontinuity       Split HLS playlists to different formats at
                                discontinuities such as ad breaks
--no-hls-split-discontinuity    Do not split HLS playlists to different
                                formats at discontinuities such as ad breaks
                                (default)
--extractor-args IE_KEY:ARGS    Pass ARGS arguments to the IE_KEY extractor.
                                See "EXTRACTOR ARGUMENTS" for details. You
                                can use this option multiple times to give
                                arguments for different extractors
</code></pre>
<h1>CONFIGURATION</h1>
<p>You can configure yt-dlp by placing any supported command line option to a configuration file. The configuration is loaded from the following locations:</p>
<ol>
<li>
<p><strong>Main Configuration</strong>:</p>
<ul>
<li>The file given by <code>--config-location</code></li>
</ul>
</li>
<li>
<p><strong>Portable Configuration</strong>: (Recommended for portable installations)</p>
<ul>
<li>If using a binary, <code>yt-dlp.conf</code> in the same directory as the binary</li>
<li>If running from source-code, <code>yt-dlp.conf</code> in the parent directory of <code>yt_dlp</code></li>
</ul>
</li>
<li>
<p><strong>Home Configuration</strong>:</p>
<ul>
<li><code>yt-dlp.conf</code> in the home path given by <code>-P</code></li>
<li>If <code>-P</code> is not given, the current directory is searched</li>
</ul>
</li>
<li>
<p><strong>User Configuration</strong>:</p>
<ul>
<li><code>${XDG_CONFIG_HOME}/yt-dlp.conf</code></li>
<li><code>${XDG_CONFIG_HOME}/yt-dlp/config</code> (recommended on Linux/macOS)</li>
<li><code>${XDG_CONFIG_HOME}/yt-dlp/config.txt</code></li>
<li><code>${APPDATA}/yt-dlp.conf</code></li>
<li><code>${APPDATA}/yt-dlp/config</code> (recommended on Windows)</li>
<li><code>${APPDATA}/yt-dlp/config.txt</code></li>
<li><code>~/yt-dlp.conf</code></li>
<li><code>~/yt-dlp.conf.txt</code></li>
<li><code>~/.yt-dlp/config</code></li>
<li><code>~/.yt-dlp/config.txt</code></li>
</ul>
<p>See also: <a href=#notes-about-environment-variables rel=nofollow>Notes about environment variables</a></p>
</li>
<li>
<p><strong>System Configuration</strong>:</p>
<ul>
<li><code>/etc/yt-dlp.conf</code></li>
<li><code>/etc/yt-dlp/config</code></li>
<li><code>/etc/yt-dlp/config.txt</code></li>
</ul>
</li>
</ol>
<p>E.g. with the following configuration file yt-dlp will always extract the audio, not copy the mtime, use a proxy and save all videos under <code>YouTube</code> directory in your home directory:</p>
<pre><code># Lines starting with # are comments

# Always extract audio
-x

# Do not copy the mtime
--no-mtime

# Use this proxy
--proxy 127.0.0.1:3128

# Save all videos under YouTube directory in your home directory
-o ~/YouTube/%(title)s.%(ext)s
</code></pre>
<p><strong>Note</strong>: Options in configuration file are just the same options aka switches used in regular command line calls; thus there <strong>must be no whitespace</strong> after <code>-</code> or <code>--</code>, e.g. <code>-o</code> or <code>--proxy</code> but not <code>- o</code> or <code>-- proxy</code>. They must also be quoted when necessary as-if it were a UNIX shell.</p>
<p>You can use <code>--ignore-config</code> if you want to disable all configuration files for a particular yt-dlp run. If <code>--ignore-config</code> is found inside any configuration file, no further configuration will be loaded. For example, having the option in the portable configuration file prevents loading of home, user, and system configurations. Additionally, (for backward compatibility) if <code>--ignore-config</code> is found inside the system configuration file, the user configuration is not loaded.</p>
<h3>Configuration file encoding</h3>
<p>The configuration files are decoded according to the UTF BOM if present, and in the encoding from system locale otherwise.</p>
<p>If you want your file to be decoded differently, add <code># coding: ENCODING</code> to the beginning of the file (e.g. <code># coding: shift-jis</code>). There must be no characters before that, even spaces or BOM.</p>
<h3>Authentication with netrc</h3>
<p>You may also want to configure automatic credentials storage for extractors that support authentication (by providing login and password with <code>--username</code> and <code>--password</code>) in order not to pass credentials as command line arguments on every yt-dlp execution and prevent tracking plain text passwords in the shell command history. You can achieve this using a <a href="https://stackoverflow.com/tags/.netrc/info" rel=nofollow><code>.netrc</code> file</a> on a per-extractor basis. For that you will need to create a <code>.netrc</code> file in <code>--netrc-location</code> and restrict permissions to read/write by only you:</p>
<pre><code>touch ${HOME}/.netrc
chmod a-rwx,u+rw ${HOME}/.netrc
</code></pre>
<p>After that you can add credentials for an extractor in the following format, where <em>extractor</em> is the name of the extractor in lowercase:</p>
<pre><code>machine &lt;extractor&gt; login &lt;username&gt; password &lt;password&gt;
</code></pre>
<p>E.g.</p>
<pre><code>machine youtube login myaccount@gmail.com password my_youtube_password
machine twitch login my_twitch_account_name password my_twitch_password
</code></pre>
<p>To activate authentication with the <code>.netrc</code> file you should pass <code>--netrc</code> to yt-dlp or place it in the <a href=#configuration rel=nofollow>configuration file</a>.</p>
<p>The default location of the .netrc file is <code>~</code> (see below).</p>
<p>As an alternative to using the <code>.netrc</code> file, which has the disadvantage of keeping your passwords in a plain text file, you can configure a custom shell command to provide the credentials for an extractor. This is done by providing the <code>--netrc-cmd</code> parameter, it shall output the credentials in the netrc format and return <code>0</code> on success, other values will be treated as an error. <code>{}</code> in the command will be replaced by the name of the extractor to make it possible to select the credentials for the right extractor.</p>
<p>E.g. To use an encrypted <code>.netrc</code> file stored as <code>.authinfo.gpg</code></p>
<pre><code>yt-dlp --netrc-cmd 'gpg --decrypt ~/.authinfo.gpg' https://www.youtube.com/watch?v=BaW_jenozKc
</code></pre>
<h3>Notes about environment variables</h3>
<ul>
<li>Environment variables are normally specified as <code>${VARIABLE}</code>/<code>$VARIABLE</code> on UNIX and <code>%VARIABLE%</code> on Windows; but is always shown as <code>${VARIABLE}</code> in this documentation</li>
<li>yt-dlp also allow using UNIX-style variables on Windows for path-like options; e.g. <code>--output</code>, <code>--config-location</code></li>
<li>If unset, <code>${XDG_CONFIG_HOME}</code> defaults to <code>~/.config</code> and <code>${XDG_CACHE_HOME}</code> to <code>~/.cache</code></li>
<li>On Windows, <code>~</code> points to <code>${HOME}</code> if present; or, <code>${USERPROFILE}</code> or <code>${HOMEDRIVE}${HOMEPATH}</code> otherwise</li>
<li>On Windows, <code>${USERPROFILE}</code> generally points to <code>C:\Users\&lt;user name&gt;</code> and <code>${APPDATA}</code> to <code>${USERPROFILE}\AppData\Roaming</code></li>
</ul>
<h1>OUTPUT TEMPLATE</h1>
<p>The <code>-o</code> option is used to indicate a template for the output file names while <code>-P</code> option is used to specify the path each type of file should be saved to.</p>

<p><strong>tl;dr:</strong> <a href=#output-template-examples rel=nofollow>navigate me to examples</a>.</p>

<p>The simplest usage of <code>-o</code> is not to set any template arguments when downloading a single file, like in <code>yt-dlp -o funny_video.flv "https://some/video"</code> (hard-coding file extension like this is <em>not</em> recommended and could break some post-processing).</p>
<p>It may however also contain special sequences that will be replaced when downloading each video. The special sequences may be formatted according to <a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting" rel=nofollow>Python string formatting operations</a>, e.g. <code>%(NAME)s</code> or <code>%(NAME)05d</code>. To clarify, that is a percent symbol followed by a name in parentheses, followed by formatting operations.</p>
<p>The field names themselves (the part inside the parenthesis) can also have some special formatting:</p>
<ol>
<li>
<p><strong>Object traversal</strong>: The dictionaries and lists available in metadata can be traversed by using a dot <code>.</code> separator; e.g. <code>%(tags.0)s</code>, <code>%(subtitles.en.-1.ext)s</code>. You can do Python slicing with colon <code>:</code>; E.g. <code>%(id.3:7:-1)s</code>, <code>%(formats.:.format_id)s</code>. Curly braces <code>{}</code> can be used to build dictionaries with only specific keys; e.g. <code>%(formats.:.{format_id,height})#j</code>. An empty field name <code>%()s</code> refers to the entire infodict; e.g. <code>%(.{id,title})s</code>. Note that all the fields that become available using this method are not listed below. Use <code>-j</code> to see such fields</p>
</li>
<li>
<p><strong>Addition</strong>: Addition and subtraction of numeric fields can be done using <code>+</code> and <code>-</code> respectively. E.g. <code>%(playlist_index+10)03d</code>, <code>%(n_entries+1-playlist_index)d</code></p>
</li>
<li>
<p><strong>Date/time Formatting</strong>: Date/time fields can be formatted according to <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes" rel=nofollow>strftime formatting</a> by specifying it separated from the field name using a <code>&gt;</code>. E.g. <code>%(duration&gt;%H-%M-%S)s</code>, <code>%(upload_date&gt;%Y-%m-%d)s</code>, <code>%(epoch-3600&gt;%H-%M-%S)s</code></p>
</li>
<li>
<p><strong>Alternatives</strong>: Alternate fields can be specified separated with a <code>,</code>. E.g. <code>%(release_date&gt;%Y,upload_date&gt;%Y|Unknown)s</code></p>
</li>
<li>
<p><strong>Replacement</strong>: A replacement value can be specified using a <code>&amp;</code> separator according to the <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel=nofollow><code>str.format</code> mini-language</a>. If the field is <em>not</em> empty, this replacement value will be used instead of the actual field content. This is done after alternate fields are considered; thus the replacement is used if <em>any</em> of the alternative fields is <em>not</em> empty. E.g. <code>%(chapters&amp;has chapters|no chapters)s</code>, <code>%(title&amp;TITLE={:&gt;20}|NO TITLE)s</code></p>
</li>
<li>
<p><strong>Default</strong>: A literal default value can be specified for when the field is empty using a <code>|</code> separator. This overrides <code>--output-na-placeholder</code>. E.g. <code>%(uploader|Unknown)s</code></p>
</li>
<li>
<p><strong>More Conversions</strong>: In addition to the normal format types <code>diouxXeEfFgGcrs</code>, yt-dlp additionally supports converting to <code>B</code> = <strong>B</strong>ytes, <code>j</code> = <strong>j</strong>son (flag <code>#</code> for pretty-printing, <code>+</code> for Unicode), <code>h</code> = HTML escaping, <code>l</code> = a comma separated <strong>l</strong>ist (flag <code>#</code> for <code>\n</code> newline-separated), <code>q</code> = a string <strong>q</strong>uoted for the terminal (flag <code>#</code> to split a list into different arguments), <code>D</code> = add <strong>D</strong>ecimal suffixes (e.g. 10M) (flag <code>#</code> to use 1024 as factor), and <code>S</code> = <strong>S</strong>anitize as filename (flag <code>#</code> for restricted)</p>
</li>
<li>
<p><strong>Unicode normalization</strong>: The format type <code>U</code> can be used for NFC <a href="https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize" rel=nofollow>Unicode normalization</a>. The alternate form flag (<code>#</code>) changes the normalization to NFD and the conversion flag <code>+</code> can be used for NFKC/NFKD compatibility equivalence normalization. E.g. <code>%(title)+.100U</code> is NFKC</p>
</li>
</ol>
<p>To summarize, the general syntax for a field is:</p>
<pre><code>%(name[.keys][addition][&gt;strf][,alternate][&amp;replacement][|default])[flags][width][.precision][length]type
</code></pre>
<p>Additionally, you can set different output templates for the various metadata files separately from the general output template by specifying the type of file followed by the template separated by a colon <code>:</code>. The different file types supported are <code>subtitle</code>, <code>thumbnail</code>, <code>description</code>, <code>annotation</code> (deprecated), <code>infojson</code>, <code>link</code>, <code>pl_thumbnail</code>, <code>pl_description</code>, <code>pl_infojson</code>, <code>chapter</code>, <code>pl_video</code>. E.g. <code>-o "%(title)s.%(ext)s" -o "thumbnail:%(title)s\%(title)s.%(ext)s"</code>  will put the thumbnails in a folder with the same name as the video. If any of the templates is empty, that type of file will not be written. E.g. <code>--write-thumbnail -o "thumbnail:"</code> will write thumbnails only for playlists and not for video.</p>
<a id=outtmpl-postprocess-note>
<p><strong>Note</strong>: Due to post-processing (i.e. merging etc.), the actual output filename might differ. Use <code>--print after_move:filepath</code> to get the name after all post-processing is complete.</p>
<p>The available fields are:</p>
<ul>
<li><code>id</code> (string): Video identifier</li>
<li><code>title</code> (string): Video title</li>
<li><code>fulltitle</code> (string): Video title ignoring live timestamp and generic title</li>
<li><code>ext</code> (string): Video filename extension</li>
<li><code>alt_title</code> (string): A secondary title of the video</li>
<li><code>description</code> (string): The description of the video</li>
<li><code>display_id</code> (string): An alternative identifier for the video</li>
<li><code>uploader</code> (string): Full name of the video uploader</li>
<li><code>license</code> (string): License name the video is licensed under</li>
<li><code>creator</code> (string): The creator of the video</li>
<li><code>timestamp</code> (numeric): UNIX timestamp of the moment the video became available</li>
<li><code>upload_date</code> (string): Video upload date in UTC (YYYYMMDD)</li>
<li><code>release_timestamp</code> (numeric): UNIX timestamp of the moment the video was released</li>
<li><code>release_date</code> (string): The date (YYYYMMDD) when the video was released in UTC</li>
<li><code>modified_timestamp</code> (numeric): UNIX timestamp of the moment the video was last modified</li>
<li><code>modified_date</code> (string): The date (YYYYMMDD) when the video was last modified in UTC</li>
<li><code>uploader_id</code> (string): Nickname or id of the video uploader</li>
<li><code>channel</code> (string): Full name of the channel the video is uploaded on</li>
<li><code>channel_id</code> (string): Id of the channel</li>
<li><code>channel_follower_count</code> (numeric): Number of followers of the channel</li>
<li><code>channel_is_verified</code> (boolean): Whether the channel is verified on the platform</li>
<li><code>location</code> (string): Physical location where the video was filmed</li>
<li><code>duration</code> (numeric): Length of the video in seconds</li>
<li><code>duration_string</code> (string): Length of the video (HH:mm:ss)</li>
<li><code>view_count</code> (numeric): How many users have watched the video on the platform</li>
<li><code>concurrent_view_count</code> (numeric): How many users are currently watching the video on the platform.</li>
<li><code>like_count</code> (numeric): Number of positive ratings of the video</li>
<li><code>dislike_count</code> (numeric): Number of negative ratings of the video</li>
<li><code>repost_count</code> (numeric): Number of reposts of the video</li>
<li><code>average_rating</code> (numeric): Average rating give by users, the scale used depends on the webpage</li>
<li><code>comment_count</code> (numeric): Number of comments on the video (For some extractors, comments are only downloaded at the end, and so this field cannot be used)</li>
<li><code>age_limit</code> (numeric): Age restriction for the video (years)</li>
<li><code>live_status</code> (string): One of "not_live", "is_live", "is_upcoming", "was_live", "post_live" (was live, but VOD is not yet processed)</li>
<li><code>is_live</code> (boolean): Whether this video is a live stream or a fixed-length video</li>
<li><code>was_live</code> (boolean): Whether this video was originally a live stream</li>
<li><code>playable_in_embed</code> (string): Whether this video is allowed to play in embedded players on other sites</li>
<li><code>availability</code> (string): Whether the video is "private", "premium_only", "subscriber_only", "needs_auth", "unlisted" or "public"</li>
<li><code>start_time</code> (numeric): Time in seconds where the reproduction should start, as specified in the URL</li>
<li><code>end_time</code> (numeric): Time in seconds where the reproduction should end, as specified in the URL</li>
<li><code>extractor</code> (string): Name of the extractor</li>
<li><code>extractor_key</code> (string): Key name of the extractor</li>
<li><code>epoch</code> (numeric): Unix epoch of when the information extraction was completed</li>
<li><code>autonumber</code> (numeric): Number that will be increased with each download, starting at <code>--autonumber-start</code>, padded with leading zeros to 5 digits</li>
<li><code>video_autonumber</code> (numeric): Number that will be increased with each video</li>
<li><code>n_entries</code> (numeric): Total number of extracted items in the playlist</li>
<li><code>playlist_id</code> (string): Identifier of the playlist that contains the video</li>
<li><code>playlist_title</code> (string): Name of the playlist that contains the video</li>
<li><code>playlist</code> (string): <code>playlist_id</code> or <code>playlist_title</code></li>
<li><code>playlist_count</code> (numeric): Total number of items in the playlist. May not be known if entire playlist is not extracted</li>
<li><code>playlist_index</code> (numeric): Index of the video in the playlist padded with leading zeros according the final index</li>
<li><code>playlist_autonumber</code> (numeric): Position of the video in the playlist download queue padded with leading zeros according to the total length of the playlist</li>
<li><code>playlist_uploader</code> (string): Full name of the playlist uploader</li>
<li><code>playlist_uploader_id</code> (string): Nickname or id of the playlist uploader</li>
<li><code>webpage_url</code> (string): A URL to the video webpage which if given to yt-dlp should allow to get the same result again</li>
<li><code>webpage_url_basename</code> (string): The basename of the webpage URL</li>
<li><code>webpage_url_domain</code> (string): The domain of the webpage URL</li>
<li><code>original_url</code> (string): The URL given by the user (or same as <code>webpage_url</code> for playlist entries)</li>
</ul>
</a><p><a id=outtmpl-postprocess-note>All the fields in </a><a href=#filtering-formats rel=nofollow>Filtering Formats</a> can also be used</p>
<p>Available for the video that belongs to some logical chapter or section:</p>
<ul>
<li><code>chapter</code> (string): Name or title of the chapter the video belongs to</li>
<li><code>chapter_number</code> (numeric): Number of the chapter the video belongs to</li>
<li><code>chapter_id</code> (string): Id of the chapter the video belongs to</li>
</ul>
<p>Available for the video that is an episode of some series or programme:</p>
<ul>
<li><code>series</code> (string): Title of the series or programme the video episode belongs to</li>
<li><code>season</code> (string): Title of the season the video episode belongs to</li>
<li><code>season_number</code> (numeric): Number of the season the video episode belongs to</li>
<li><code>season_id</code> (string): Id of the season the video episode belongs to</li>
<li><code>episode</code> (string): Title of the video episode</li>
<li><code>episode_number</code> (numeric): Number of the video episode within a season</li>
<li><code>episode_id</code> (string): Id of the video episode</li>
</ul>
<p>Available for the media that is a track or a part of a music album:</p>
<ul>
<li><code>track</code> (string): Title of the track</li>
<li><code>track_number</code> (numeric): Number of the track within an album or a disc</li>
<li><code>track_id</code> (string): Id of the track</li>
<li><code>artist</code> (string): Artist(s) of the track</li>
<li><code>genre</code> (string): Genre(s) of the track</li>
<li><code>album</code> (string): Title of the album the track belongs to</li>
<li><code>album_type</code> (string): Type of the album</li>
<li><code>album_artist</code> (string): List of all artists appeared on the album</li>
<li><code>disc_number</code> (numeric): Number of the disc or other physical medium the track belongs to</li>
<li><code>release_year</code> (numeric): Year (YYYY) when the album was released</li>
</ul>
<p>Available only when using <code>--download-sections</code> and for <code>chapter:</code> prefix when using <code>--split-chapters</code> for videos with internal chapters:</p>
<ul>
<li><code>section_title</code> (string): Title of the chapter</li>
<li><code>section_number</code> (numeric): Number of the chapter within the file</li>
<li><code>section_start</code> (numeric): Start time of the chapter in seconds</li>
<li><code>section_end</code> (numeric): End time of the chapter in seconds</li>
</ul>
<p>Available only when used in <code>--print</code>:</p>
<ul>
<li><code>urls</code> (string): The URLs of all requested formats, one in each line</li>
<li><code>filename</code> (string): Name of the video file. Note that the <a href=#outtmpl-postprocess-note rel=nofollow>actual filename may differ</a></li>
<li><code>formats_table</code> (table): The video format table as printed by <code>--list-formats</code></li>
<li><code>thumbnails_table</code> (table): The thumbnail format table as printed by <code>--list-thumbnails</code></li>
<li><code>subtitles_table</code> (table): The subtitle format table as printed by <code>--list-subs</code></li>
<li><code>automatic_captions_table</code> (table): The automatic subtitle format table as printed by <code>--list-subs</code></li>
</ul>
<p>Available only after the video is downloaded (<code>post_process</code>/<code>after_move</code>):</p>
<ul>
<li><code>filepath</code>: Actual path of downloaded video file</li>
</ul>
<p>Available only in <code>--sponsorblock-chapter-title</code>:</p>
<ul>
<li><code>start_time</code> (numeric): Start time of the chapter in seconds</li>
<li><code>end_time</code> (numeric): End time of the chapter in seconds</li>
<li><code>categories</code> (list): The <a href="https://wiki.sponsor.ajay.app/w/Types#Category" rel=nofollow>SponsorBlock categories</a> the chapter belongs to</li>
<li><code>category</code> (string): The smallest SponsorBlock category the chapter belongs to</li>
<li><code>category_names</code> (list): Friendly names of the categories</li>
<li><code>name</code> (string): Friendly name of the smallest category</li>
<li><code>type</code> (string): The <a href="https://wiki.sponsor.ajay.app/w/Types#Action_Type" rel=nofollow>SponsorBlock action type</a> of the chapter</li>
</ul>
<p>Each aforementioned sequence when referenced in an output template will be replaced by the actual value corresponding to the sequence name. E.g. for <code>-o %(title)s-%(id)s.%(ext)s</code> and an mp4 video with title <code>yt-dlp test video</code> and id <code>BaW_jenozKc</code>, this will result in a <code>yt-dlp test video-BaW_jenozKc.mp4</code> file created in the current directory.</p>
<p><strong>Note</strong>: Some of the sequences are not guaranteed to be present since they depend on the metadata obtained by a particular extractor. Such sequences will be replaced with placeholder value provided with <code>--output-na-placeholder</code> (<code>NA</code> by default).</p>
<p><strong>Tip</strong>: Look at the <code>-j</code> output to identify which fields are available for the particular URL</p>
<p>For numeric sequences you can use <a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting" rel=nofollow>numeric related formatting</a>; e.g. <code>%(view_count)05d</code> will result in a string with view count padded with zeros up to 5 characters, like in <code>00042</code>.</p>
<p>Output templates can also contain arbitrary hierarchical path, e.g. <code>-o "%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s"</code> which will result in downloading each video in a directory corresponding to this path template. Any missing directory will be automatically created for you.</p>
<p>To use percent literals in an output template use <code>%%</code>. To output to stdout use <code>-o -</code>.</p>
<p>The current default template is <code>%(title)s [%(id)s].%(ext)s</code>.</p>
<p>In some cases, you don't want special characters such as 中, spaces, or &amp;, such as when transferring the downloaded filename to a Windows system or the filename through an 8bit-unsafe channel. In these cases, add the <code>--restrict-filenames</code> flag to get a shorter title.</p>
<h4>Output template examples</h4>
<pre lang=bash>$<span class=w> </span>yt-dlp<span class=w> </span>--print<span class=w> </span>filename<span class=w> </span>-o<span class=w> </span><span class=s2>"test video.%(ext)s"</span><span class=w> </span>BaW_jenozKc
<span class=nb>test</span><span class=w> </span>video.webm<span class=w>    </span><span class=c1># Literal name with correct extension</span>

$<span class=w> </span>yt-dlp<span class=w> </span>--print<span class=w> </span>filename<span class=w> </span>-o<span class=w> </span><span class=s2>"%(title)s.%(ext)s"</span><span class=w> </span>BaW_jenozKc
youtube-dl<span class=w> </span><span class=nb>test</span><span class=w> </span>video<span class=w> </span><span class=s1>''</span>_ä↭𝕐.webm<span class=w>    </span><span class=c1># All kinds of weird characters</span>

$<span class=w> </span>yt-dlp<span class=w> </span>--print<span class=w> </span>filename<span class=w> </span>-o<span class=w> </span><span class=s2>"%(title)s.%(ext)s"</span><span class=w> </span>BaW_jenozKc<span class=w> </span>--restrict-filenames
youtube-dl_test_video_.webm<span class=w>    </span><span class=c1># Restricted file name</span>

<span class=c1># Download YouTube playlist videos in separate directory indexed by video order in a playlist</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-o<span class=w> </span><span class=s2>"%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s"</span><span class=w> </span><span class=s2>"https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re"</span>

<span class=c1># Download YouTube playlist videos in separate directories according to their uploaded year</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-o<span class=w> </span><span class=s2>"%(upload_date&gt;%Y)s/%(title)s.%(ext)s"</span><span class=w> </span><span class=s2>"https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re"</span>

<span class=c1># Prefix playlist index with " - " separator, but only if it is available</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-o<span class=w> </span><span class=s2>"%(playlist_index&amp;{} - |)s%(title)s.%(ext)s"</span><span class=w> </span>BaW_jenozKc<span class=w> </span><span class=s2>"https://www.youtube.com/user/TheLinuxFoundation/playlists"</span>

<span class=c1># Download all playlists of YouTube channel/user keeping each playlist in separate directory:</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-o<span class=w> </span><span class=s2>"%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s"</span><span class=w> </span><span class=s2>"https://www.youtube.com/user/TheLinuxFoundation/playlists"</span>

<span class=c1># Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-u<span class=w> </span>user<span class=w> </span>-p<span class=w> </span>password<span class=w> </span>-P<span class=w> </span><span class=s2>"~/MyVideos"</span><span class=w> </span>-o<span class=w> </span><span class=s2>"%(playlist)s/%(chapter_number)s - %(chapter)s/%(title)s.%(ext)s"</span><span class=w> </span><span class=s2>"https://www.udemy.com/java-tutorial"</span>

<span class=c1># Download entire series season keeping each series and each season in separate directory under C:/MyVideos</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-P<span class=w> </span><span class=s2>"C:/MyVideos"</span><span class=w> </span>-o<span class=w> </span><span class=s2>"%(series)s/%(season_number)s - %(season)s/%(episode_number)s - %(episode)s.%(ext)s"</span><span class=w> </span><span class=s2>"https://videomore.ru/kino_v_detalayah/5_sezon/367617"</span>

<span class=c1># Download video as "C:\MyVideos\uploader\title.ext", subtitles as "C:\MyVideos\subs\uploader\title.ext"</span>
<span class=c1># and put all temporary files in "C:\MyVideos\tmp"</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-P<span class=w> </span><span class=s2>"C:/MyVideos"</span><span class=w> </span>-P<span class=w> </span><span class=s2>"temp:tmp"</span><span class=w> </span>-P<span class=w> </span><span class=s2>"subtitle:subs"</span><span class=w> </span>-o<span class=w> </span><span class=s2>"%(uploader)s/%(title)s.%(ext)s"</span><span class=w> </span>BaW_jenoz<span class=w> </span>--write-subs

<span class=c1># Download video as "C:\MyVideos\uploader\title.ext" and subtitles as "C:\MyVideos\uploader\subs\title.ext"</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-P<span class=w> </span><span class=s2>"C:/MyVideos"</span><span class=w> </span>-o<span class=w> </span><span class=s2>"%(uploader)s/%(title)s.%(ext)s"</span><span class=w> </span>-o<span class=w> </span><span class=s2>"subtitle:%(uploader)s/subs/%(title)s.%(ext)s"</span><span class=w> </span>BaW_jenozKc<span class=w> </span>--write-subs

<span class=c1># Stream the video being downloaded to stdout</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-o<span class=w> </span>-<span class=w> </span>BaW_jenozKc
</pre>
<h1>FORMAT SELECTION</h1>
<p>By default, yt-dlp tries to download the best available quality if you <strong>don't</strong> pass any options.
This is generally equivalent to using <code>-f bestvideo*+bestaudio/best</code>. However, if multiple audiostreams is enabled (<code>--audio-multistreams</code>), the default format changes to <code>-f bestvideo+bestaudio/best</code>. Similarly, if ffmpeg is unavailable, or if you use yt-dlp to stream to <code>stdout</code> (<code>-o -</code>), the default becomes <code>-f best/bestvideo+bestaudio</code>.</p>
<p><strong>Deprecation warning</strong>: Latest versions of yt-dlp can stream multiple formats to the stdout simultaneously using ffmpeg. So, in future versions, the default for this will be set to <code>-f bv*+ba/b</code> similar to normal downloads. If you want to preserve the <code>-f b/bv+ba</code> setting, it is recommended to explicitly specify it in the configuration options.</p>
<p>The general syntax for format selection is <code>-f FORMAT</code> (or <code>--format FORMAT</code>) where <code>FORMAT</code> is a <em>selector expression</em>, i.e. an expression that describes format or formats you would like to download.</p>

<p><strong>tl;dr:</strong> <a href=#format-selection-examples rel=nofollow>navigate me to examples</a>.</p>

<p>The simplest case is requesting a specific format; e.g. with <code>-f 22</code> you can download the format with format code equal to 22. You can get the list of available format codes for particular video using <code>--list-formats</code> or <code>-F</code>. Note that these format codes are extractor specific.</p>
<p>You can also use a file extension (currently <code>3gp</code>, <code>aac</code>, <code>flv</code>, <code>m4a</code>, <code>mp3</code>, <code>mp4</code>, <code>ogg</code>, <code>wav</code>, <code>webm</code> are supported) to download the best quality format of a particular file extension served as a single file, e.g. <code>-f webm</code> will download the best quality format with the <code>webm</code> extension served as a single file.</p>
<p>You can use <code>-f -</code> to interactively provide the format selector <em>for each video</em></p>
<p>You can also use special names to select particular edge case formats:</p>
<ul>
<li><code>all</code>: Select <strong>all formats</strong> separately</li>
<li><code>mergeall</code>: Select and <strong>merge all formats</strong> (Must be used with <code>--audio-multistreams</code>, <code>--video-multistreams</code> or both)</li>
<li><code>b*</code>, <code>best*</code>: Select the best quality format that <strong>contains either</strong> a video or an audio or both (ie; <code>vcodec!=none or acodec!=none</code>)</li>
<li><code>b</code>, <code>best</code>: Select the best quality format that <strong>contains both</strong> video and audio. Equivalent to <code>best*[vcodec!=none][acodec!=none]</code></li>
<li><code>bv</code>, <code>bestvideo</code>: Select the best quality <strong>video-only</strong> format. Equivalent to <code>best*[acodec=none]</code></li>
<li><code>bv*</code>, <code>bestvideo*</code>: Select the best quality format that <strong>contains video</strong>. It may also contain audio. Equivalent to <code>best*[vcodec!=none]</code></li>
<li><code>ba</code>, <code>bestaudio</code>: Select the best quality <strong>audio-only</strong> format. Equivalent to <code>best*[vcodec=none]</code></li>
<li><code>ba*</code>, <code>bestaudio*</code>: Select the best quality format that <strong>contains audio</strong>. It may also contain video. Equivalent to <code>best*[acodec!=none]</code> (<a href="https://github.com/yt-dlp/yt-dlp/issues/979#issuecomment-919629354" rel=nofollow>Do not use!</a>)</li>
<li><code>w*</code>, <code>worst*</code>: Select the worst quality format that contains either a video or an audio</li>
<li><code>w</code>, <code>worst</code>: Select the worst quality format that contains both video and audio. Equivalent to <code>worst*[vcodec!=none][acodec!=none]</code></li>
<li><code>wv</code>, <code>worstvideo</code>: Select the worst quality video-only format. Equivalent to <code>worst*[acodec=none]</code></li>
<li><code>wv*</code>, <code>worstvideo*</code>: Select the worst quality format that contains video. It may also contain audio. Equivalent to <code>worst*[vcodec!=none]</code></li>
<li><code>wa</code>, <code>worstaudio</code>: Select the worst quality audio-only format. Equivalent to <code>worst*[vcodec=none]</code></li>
<li><code>wa*</code>, <code>worstaudio*</code>: Select the worst quality format that contains audio. It may also contain video. Equivalent to <code>worst*[acodec!=none]</code></li>
</ul>
<p>For example, to download the worst quality video-only format you can use <code>-f worstvideo</code>. It is however recommended not to use <code>worst</code> and related options. When your format selector is <code>worst</code>, the format which is worst in all respects is selected. Most of the time, what you actually want is the video with the smallest filesize instead. So it is generally better to use <code>-S +size</code> or more rigorously, <code>-S +size,+br,+res,+fps</code> instead of <code>-f worst</code>. See <a href=#sorting-formats rel=nofollow>Sorting Formats</a> for more details.</p>
<p>You can select the n'th best format of a type by using <code>best&lt;type&gt;.&lt;n&gt;</code>. For example, <code>best.2</code> will select the 2nd best combined format. Similarly, <code>bv*.3</code> will select the 3rd best format that contains a video stream.</p>
<p>If you want to download multiple videos, and they don't have the same formats available, you can specify the order of preference using slashes. Note that formats on the left hand side are preferred; e.g. <code>-f 22/17/18</code> will download format 22 if it's available, otherwise it will download format 17 if it's available, otherwise it will download format 18 if it's available, otherwise it will complain that no suitable formats are available for download.</p>
<p>If you want to download several formats of the same video use a comma as a separator, e.g. <code>-f 22,17,18</code> will download all these three formats, of course if they are available. Or a more sophisticated example combined with the precedence feature: <code>-f 136/137/mp4/bestvideo,140/m4a/bestaudio</code>.</p>
<p>You can merge the video and audio of multiple formats into a single file using <code>-f &lt;format1&gt;+&lt;format2&gt;+...</code> (requires ffmpeg installed); e.g. <code>-f bestvideo+bestaudio</code> will download the best video-only format, the best audio-only format and mux them together with ffmpeg.</p>
<p><strong>Deprecation warning</strong>: Since the <em>below</em> described behavior is complex and counter-intuitive, this will be removed and multistreams will be enabled by default in the future. A new operator will be instead added to limit formats to single audio/video</p>
<p>Unless <code>--video-multistreams</code> is used, all formats with a video stream except the first one are ignored. Similarly, unless <code>--audio-multistreams</code> is used, all formats with an audio stream except the first one are ignored. E.g. <code>-f bestvideo+best+bestaudio --video-multistreams --audio-multistreams</code> will download and merge all 3 given formats. The resulting file will have 2 video streams and 2 audio streams. But <code>-f bestvideo+best+bestaudio --no-video-multistreams</code> will download and merge only <code>bestvideo</code> and <code>bestaudio</code>. <code>best</code> is ignored since another format containing a video stream (<code>bestvideo</code>) has already been selected. The order of the formats is therefore important. <code>-f best+bestaudio --no-audio-multistreams</code> will download only <code>best</code> while <code>-f bestaudio+best --no-audio-multistreams</code> will ignore <code>best</code> and download only <code>bestaudio</code>.</p>
<h2>Filtering Formats</h2>
<p>You can also filter the video formats by putting a condition in brackets, as in <code>-f "best[height=720]"</code> (or <code>-f "[filesize&gt;10M]"</code> since filters without a selector are interpreted as <code>best</code>).</p>
<p>The following numeric meta fields can be used with comparisons <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>=</code> (equals), <code>!=</code> (not equals):</p>
<ul>
<li><code>filesize</code>: The number of bytes, if known in advance</li>
<li><code>filesize_approx</code>: An estimate for the number of bytes</li>
<li><code>width</code>: Width of the video, if known</li>
<li><code>height</code>: Height of the video, if known</li>
<li><code>aspect_ratio</code>: Aspect ratio of the video, if known</li>
<li><code>tbr</code>: Average bitrate of audio and video in KBit/s</li>
<li><code>abr</code>: Average audio bitrate in KBit/s</li>
<li><code>vbr</code>: Average video bitrate in KBit/s</li>
<li><code>asr</code>: Audio sampling rate in Hertz</li>
<li><code>fps</code>: Frame rate</li>
<li><code>audio_channels</code>: The number of audio channels</li>
<li><code>stretched_ratio</code>: <code>width:height</code> of the video's pixels, if not square</li>
</ul>
<p>Also filtering work for comparisons <code>=</code> (equals), <code>^=</code> (starts with), <code>$=</code> (ends with), <code>*=</code> (contains), <code>~=</code> (matches regex) and following string meta fields:</p>
<ul>
<li><code>url</code>: Video URL</li>
<li><code>ext</code>: File extension</li>
<li><code>acodec</code>: Name of the audio codec in use</li>
<li><code>vcodec</code>: Name of the video codec in use</li>
<li><code>container</code>: Name of the container format</li>
<li><code>protocol</code>: The protocol that will be used for the actual download, lower-case (<code>http</code>, <code>https</code>, <code>rtsp</code>, <code>rtmp</code>, <code>rtmpe</code>, <code>mms</code>, <code>f4m</code>, <code>ism</code>, <code>http_dash_segments</code>, <code>m3u8</code>, or <code>m3u8_native</code>)</li>
<li><code>language</code>: Language code</li>
<li><code>dynamic_range</code>: The dynamic range of the video</li>
<li><code>format_id</code>: A short description of the format</li>
<li><code>format</code>: A human-readable description of the format</li>
<li><code>format_note</code>: Additional info about the format</li>
<li><code>resolution</code>: Textual description of width and height</li>
</ul>
<p>Any string comparison may be prefixed with negation <code>!</code> in order to produce an opposite comparison, e.g. <code>!*=</code> (does not contain). The comparand of a string comparison needs to be quoted with either double or single quotes if it contains spaces or special characters other than <code>._-</code>.</p>
<p><strong>Note</strong>: None of the aforementioned meta fields are guaranteed to be present since this solely depends on the metadata obtained by particular extractor, i.e. the metadata offered by the website. Any other field made available by the extractor can also be used for filtering.</p>
<p>Formats for which the value is not known are excluded unless you put a question mark (<code>?</code>) after the operator. You can combine format filters, so <code>-f "bv[height&lt;=?720][tbr&gt;500]"</code> selects up to 720p videos (or videos where the height is not known) with a bitrate of at least 500 KBit/s. You can also use the filters with <code>all</code> to download all formats that satisfy the filter, e.g. <code>-f "all[vcodec=none]"</code> selects all audio-only formats.</p>
<p>Format selectors can also be grouped using parentheses; e.g. <code>-f "(mp4,webm)[height&lt;480]"</code> will download the best pre-merged mp4 and webm formats with a height lower than 480.</p>
<h2>Sorting Formats</h2>
<p>You can change the criteria for being considered the <code>best</code> by using <code>-S</code> (<code>--format-sort</code>). The general format for this is <code>--format-sort field1,field2...</code>.</p>
<p>The available fields are:</p>
<ul>
<li><code>hasvid</code>: Gives priority to formats that have a video stream</li>
<li><code>hasaud</code>: Gives priority to formats that have an audio stream</li>
<li><code>ie_pref</code>: The format preference</li>
<li><code>lang</code>: The language preference</li>
<li><code>quality</code>: The quality of the format</li>
<li><code>source</code>: The preference of the source</li>
<li><code>proto</code>: Protocol used for download (<code>https</code>/<code>ftps</code> &gt; <code>http</code>/<code>ftp</code> &gt; <code>m3u8_native</code>/<code>m3u8</code> &gt; <code>http_dash_segments</code>&gt; <code>websocket_frag</code> &gt; <code>mms</code>/<code>rtsp</code> &gt; <code>f4f</code>/<code>f4m</code>)</li>
<li><code>vcodec</code>: Video Codec (<code>av01</code> &gt; <code>vp9.2</code> &gt; <code>vp9</code> &gt; <code>h265</code> &gt; <code>h264</code> &gt; <code>vp8</code> &gt; <code>h263</code> &gt; <code>theora</code> &gt; other)</li>
<li><code>acodec</code>: Audio Codec (<code>flac</code>/<code>alac</code> &gt; <code>wav</code>/<code>aiff</code> &gt; <code>opus</code> &gt; <code>vorbis</code> &gt; <code>aac</code> &gt; <code>mp4a</code> &gt; <code>mp3</code> &gt; <code>ac4</code> &gt; <code>eac3</code> &gt; <code>ac3</code> &gt; <code>dts</code> &gt; other)</li>
<li><code>codec</code>: Equivalent to <code>vcodec,acodec</code></li>
<li><code>vext</code>: Video Extension (<code>mp4</code> &gt; <code>mov</code> &gt; <code>webm</code> &gt; <code>flv</code> &gt; other). If <code>--prefer-free-formats</code> is used, <code>webm</code> is preferred.</li>
<li><code>aext</code>: Audio Extension (<code>m4a</code> &gt; <code>aac</code> &gt; <code>mp3</code> &gt; <code>ogg</code> &gt; <code>opus</code> &gt; <code>webm</code> &gt; other). If <code>--prefer-free-formats</code> is used, the order changes to <code>ogg</code> &gt; <code>opus</code> &gt; <code>webm</code> &gt; <code>mp3</code> &gt; <code>m4a</code> &gt; <code>aac</code></li>
<li><code>ext</code>: Equivalent to <code>vext,aext</code></li>
<li><code>filesize</code>: Exact filesize, if known in advance</li>
<li><code>fs_approx</code>: Approximate filesize calculated from the manifests</li>
<li><code>size</code>: Exact filesize if available, otherwise approximate filesize</li>
<li><code>height</code>: Height of video</li>
<li><code>width</code>: Width of video</li>
<li><code>res</code>: Video resolution, calculated as the smallest dimension.</li>
<li><code>fps</code>: Framerate of video</li>
<li><code>hdr</code>: The dynamic range of the video (<code>DV</code> &gt; <code>HDR12</code> &gt; <code>HDR10+</code> &gt; <code>HDR10</code> &gt; <code>HLG</code> &gt; <code>SDR</code>)</li>
<li><code>channels</code>: The number of audio channels</li>
<li><code>tbr</code>: Total average bitrate in KBit/s</li>
<li><code>vbr</code>: Average video bitrate in KBit/s</li>
<li><code>abr</code>: Average audio bitrate in KBit/s</li>
<li><code>br</code>: Equivalent to using <code>tbr,vbr,abr</code></li>
<li><code>asr</code>: Audio sample rate in Hz</li>
</ul>
<p><strong>Deprecation warning</strong>: Many of these fields have (currently undocumented) aliases, that may be removed in a future version. It is recommended to use only the documented field names.</p>
<p>All fields, unless specified otherwise, are sorted in descending order. To reverse this, prefix the field with a <code>+</code>. E.g. <code>+res</code> prefers format with the smallest resolution. Additionally, you can suffix a preferred value for the fields, separated by a <code>:</code>. E.g. <code>res:720</code> prefers larger videos, but no larger than 720p and the smallest video if there are no videos less than 720p. For <code>codec</code> and <code>ext</code>, you can provide two preferred values, the first for video and the second for audio. E.g. <code>+codec:avc:m4a</code> (equivalent to <code>+vcodec:avc,+acodec:m4a</code>) sets the video codec preference to <code>h264</code> &gt; <code>h265</code> &gt; <code>vp9</code> &gt; <code>vp9.2</code> &gt; <code>av01</code> &gt; <code>vp8</code> &gt; <code>h263</code> &gt; <code>theora</code> and audio codec preference to <code>mp4a</code> &gt; <code>aac</code> &gt; <code>vorbis</code> &gt; <code>opus</code> &gt; <code>mp3</code> &gt; <code>ac3</code> &gt; <code>dts</code>. You can also make the sorting prefer the nearest values to the provided by using <code>~</code> as the delimiter. E.g. <code>filesize~1G</code> prefers the format with filesize closest to 1 GiB.</p>
<p>The fields <code>hasvid</code> and <code>ie_pref</code> are always given highest priority in sorting, irrespective of the user-defined order. This behaviour can be changed by using <code>--format-sort-force</code>. Apart from these, the default order used is: <code>lang,quality,res,fps,hdr:12,vcodec:vp9.2,channels,acodec,size,br,asr,proto,ext,hasaud,source,id</code>. The extractors may override this default order, but they cannot override the user-provided order.</p>
<p>Note that the default has <code>vcodec:vp9.2</code>; i.e. <code>av1</code> is not preferred. Similarly, the default for hdr is <code>hdr:12</code>; i.e. dolby vision is not preferred. These choices are made since DV and AV1 formats are not yet fully compatible with most devices. This may be changed in the future as more devices become capable of smoothly playing back these formats.</p>
<p>If your format selector is <code>worst</code>, the last item is selected after sorting. This means it will select the format that is worst in all respects. Most of the time, what you actually want is the video with the smallest filesize instead. So it is generally better to use <code>-f best -S +size,+br,+res,+fps</code>.</p>
<p><strong>Tip</strong>: You can use the <code>-v -F</code> to see how the formats have been sorted (worst to best).</p>
<h2>Format Selection examples</h2>
<pre lang=bash><span class=c1># Download and merge the best video-only format and the best audio-only format,</span>
<span class=c1># or download the best combined format if video-only format is not available</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"bv+ba/b"</span>

<span class=c1># Download best format that contains video,</span>
<span class=c1># and if it doesn't already have an audio stream, merge it with best audio-only format</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"bv*+ba/b"</span>

<span class=c1># Same as above</span>
$<span class=w> </span>yt-dlp

<span class=c1># Download the best video-only format and the best audio-only format without merging them</span>
<span class=c1># For this case, an output template should be used since</span>
<span class=c1># by default, bestvideo and bestaudio will have the same file name.</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"bv,ba"</span><span class=w> </span>-o<span class=w> </span><span class=s2>"%(title)s.f%(format_id)s.%(ext)s"</span>

<span class=c1># Download and merge the best format that has a video stream,</span>
<span class=c1># and all audio-only formats into one file</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"bv*+mergeall[vcodec=none]"</span><span class=w> </span>--audio-multistreams

<span class=c1># Download and merge the best format that has a video stream,</span>
<span class=c1># and the best 2 audio-only formats into one file</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"bv*+ba+ba.2"</span><span class=w> </span>--audio-multistreams


<span class=c1># The following examples show the old method (without -S) of format selection</span>
<span class=c1># and how to use -S to achieve a similar but (generally) better result</span>

<span class=c1># Download the worst video available (old method)</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"wv*+wa/w"</span>

<span class=c1># Download the best video available but with the smallest resolution</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-S<span class=w> </span><span class=s2>"+res"</span>

<span class=c1># Download the smallest video available</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-S<span class=w> </span><span class=s2>"+size,+br"</span>



<span class=c1># Download the best mp4 video available, or the best video if no mp4 available</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4] / bv*+ba/b"</span>

<span class=c1># Download the best video with the best extension</span>
<span class=c1># (For video, mp4 &gt; mov &gt; webm &gt; flv. For audio, m4a &gt; aac &gt; mp3 ...)</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-S<span class=w> </span><span class=s2>"ext"</span>



<span class=c1># Download the best video available but no better than 480p,</span>
<span class=c1># or the worst video if there is no video under 480p</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"bv*[height&lt;=480]+ba/b[height&lt;=480] / wv*+ba/w"</span>

<span class=c1># Download the best video available with the largest height but no better than 480p,</span>
<span class=c1># or the best video with the smallest resolution if there is no video under 480p</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-S<span class=w> </span><span class=s2>"height:480"</span>

<span class=c1># Download the best video available with the largest resolution but no better than 480p,</span>
<span class=c1># or the best video with the smallest resolution if there is no video under 480p</span>
<span class=c1># Resolution is determined by using the smallest dimension.</span>
<span class=c1># So this works correctly for vertical videos as well</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-S<span class=w> </span><span class=s2>"res:480"</span>



<span class=c1># Download the best video (that also has audio) but no bigger than 50 MB,</span>
<span class=c1># or the worst video (that also has audio) if there is no video under 50 MB</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"b[filesize&lt;50M] / w"</span>

<span class=c1># Download largest video (that also has audio) but no bigger than 50 MB,</span>
<span class=c1># or the smallest video (that also has audio) if there is no video under 50 MB</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"b"</span><span class=w> </span>-S<span class=w> </span><span class=s2>"filesize:50M"</span>

<span class=c1># Download best video (that also has audio) that is closest in size to 50 MB</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"b"</span><span class=w> </span>-S<span class=w> </span><span class=s2>"filesize~50M"</span>



<span class=c1># Download best video available via direct link over HTTP/HTTPS protocol,</span>
<span class=c1># or the best video available via any protocol if there is no such video</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"(bv*+ba/b)[protocol^=http][protocol!*=dash] / (bv*+ba/b)"</span>

<span class=c1># Download best video available via the best protocol</span>
<span class=c1># (https/ftps &gt; http/ftp &gt; m3u8_native &gt; m3u8 &gt; http_dash_segments ...)</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-S<span class=w> </span><span class=s2>"proto"</span>



<span class=c1># Download the best video with either h264 or h265 codec,</span>
<span class=c1># or the best video if there is no such video</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"(bv*[vcodec~='^((he|a)vc|h26[45])']+ba) / (bv*+ba/b)"</span>

<span class=c1># Download the best video with best codec no better than h264,</span>
<span class=c1># or the best video with worst codec if there is no such video</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-S<span class=w> </span><span class=s2>"codec:h264"</span>

<span class=c1># Download the best video with worst codec no worse than h264,</span>
<span class=c1># or the best video with best codec if there is no such video</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-S<span class=w> </span><span class=s2>"+codec:h264"</span>



<span class=c1># More complex examples</span>

<span class=c1># Download the best video no better than 720p preferring framerate greater than 30,</span>
<span class=c1># or the worst video (still preferring framerate greater than 30) if there is no such video</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-f<span class=w> </span><span class=s2>"((bv*[fps&gt;30]/bv*)[height&lt;=720]/(wv*[fps&gt;30]/wv*)) + ba / (b[fps&gt;30]/b)[height&lt;=720]/(w[fps&gt;30]/w)"</span>

<span class=c1># Download the video with the largest resolution no better than 720p,</span>
<span class=c1># or the video with the smallest resolution available if there is no such video,</span>
<span class=c1># preferring larger framerate for formats with the same resolution</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-S<span class=w> </span><span class=s2>"res:720,fps"</span>



<span class=c1># Download the video with smallest resolution no worse than 480p,</span>
<span class=c1># or the video with the largest resolution available if there is no such video,</span>
<span class=c1># preferring better codec and then larger total bitrate for the same resolution</span>
$<span class=w> </span>yt-dlp<span class=w> </span>-S<span class=w> </span><span class=s2>"+res:480,codec,br"</span>
</pre>
<h1>MODIFYING METADATA</h1>
<p>The metadata obtained by the extractors can be modified by using <code>--parse-metadata</code> and <code>--replace-in-metadata</code></p>
<p><code>--replace-in-metadata FIELDS REGEX REPLACE</code> is used to replace text in any metadata field using <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel=nofollow>python regular expression</a>. <a href="https://docs.python.org/3/library/re.html?highlight=backreferences#re.sub" rel=nofollow>Backreferences</a> can be used in the replace string for advanced use.</p>
<p>The general syntax of <code>--parse-metadata FROM:TO</code> is to give the name of a field or an <a href=#output-template rel=nofollow>output template</a> to extract data from, and the format to interpret it as, separated by a colon <code>:</code>. Either a <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel=nofollow>python regular expression</a> with named capture groups, a single field name, or a similar syntax to the <a href=#output-template rel=nofollow>output template</a> (only <code>%(field)s</code> formatting is supported) can be used for <code>TO</code>. The option can be used multiple times to parse and modify various fields.</p>
<p>Note that these options preserve their relative order, allowing replacements to be made in parsed fields and viceversa. Also, any field thus created can be used in the <a href=#output-template rel=nofollow>output template</a> and will also affect the media file's metadata added when using <code>--embed-metadata</code>.</p>
<p>This option also has a few special uses:</p>
<ul>
<li>
<p>You can download an additional URL based on the metadata of the currently downloaded video. To do this, set the field <code>additional_urls</code> to the URL that you want to download. E.g. <code>--parse-metadata "description:(?P&lt;additional_urls&gt;https?://www\.vimeo\.com/\d+)"</code> will download the first vimeo video found in the description</p>
</li>
<li>
<p>You can use this to change the metadata that is embedded in the media file. To do this, set the value of the corresponding field with a <code>meta_</code> prefix. For example, any value you set to <code>meta_description</code> field will be added to the <code>description</code> field in the file - you can use this to set a different "description" and "synopsis". To modify the metadata of individual streams, use the <code>meta&lt;n&gt;_</code> prefix (e.g. <code>meta1_language</code>). Any value set to the <code>meta_</code> field will overwrite all default values.</p>
</li>
</ul>
<p><strong>Note</strong>: Metadata modification happens before format selection, post-extraction and other post-processing operations. Some fields may be added or changed during these steps, overriding your changes.</p>
<p>For reference, these are the fields yt-dlp adds by default to the file metadata:</p>
<table>
<thead>
<tr>
<th align=left>Metadata fields</th>
<th align=left>From</th>
</tr>
</thead>
<tbody>
<tr>
<td align=left><code>title</code></td>
<td align=left><code>track</code> or <code>title</code></td>
</tr>
<tr>
<td align=left><code>date</code></td>
<td align=left><code>upload_date</code></td>
</tr>
<tr>
<td align=left><code>description</code>,  <code>synopsis</code></td>
<td align=left><code>description</code></td>
</tr>
<tr>
<td align=left><code>purl</code>, <code>comment</code></td>
<td align=left><code>webpage_url</code></td>
</tr>
<tr>
<td align=left><code>track</code></td>
<td align=left><code>track_number</code></td>
</tr>
<tr>
<td align=left><code>artist</code></td>
<td align=left><code>artist</code>, <code>creator</code>, <code>uploader</code> or <code>uploader_id</code></td>
</tr>
<tr>
<td align=left><code>genre</code></td>
<td align=left><code>genre</code></td>
</tr>
<tr>
<td align=left><code>album</code></td>
<td align=left><code>album</code></td>
</tr>
<tr>
<td align=left><code>album_artist</code></td>
<td align=left><code>album_artist</code></td>
</tr>
<tr>
<td align=left><code>disc</code></td>
<td align=left><code>disc_number</code></td>
</tr>
<tr>
<td align=left><code>show</code></td>
<td align=left><code>series</code></td>
</tr>
<tr>
<td align=left><code>season_number</code></td>
<td align=left><code>season_number</code></td>
</tr>
<tr>
<td align=left><code>episode_id</code></td>
<td align=left><code>episode</code> or <code>episode_id</code></td>
</tr>
<tr>
<td align=left><code>episode_sort</code></td>
<td align=left><code>episode_number</code></td>
</tr>
<tr>
<td align=left><code>language</code> of each stream</td>
<td align=left>the format's <code>language</code></td>
</tr>
</tbody>
</table>
<p><strong>Note</strong>: The file format may not support some of these fields</p>
<h2>Modifying metadata examples</h2>
<pre lang=bash><span class=c1># Interpret the title as "Artist - Title"</span>
$<span class=w> </span>yt-dlp<span class=w> </span>--parse-metadata<span class=w> </span><span class=s2>"title:%(artist)s - %(title)s"</span>

<span class=c1># Regex example</span>
$<span class=w> </span>yt-dlp<span class=w> </span>--parse-metadata<span class=w> </span><span class=s2>"description:Artist - (?P&lt;artist&gt;.+)"</span>

<span class=c1># Set title as "Series name S01E05"</span>
$<span class=w> </span>yt-dlp<span class=w> </span>--parse-metadata<span class=w> </span><span class=s2>"%(series)s S%(season_number)02dE%(episode_number)02d:%(title)s"</span>

<span class=c1># Prioritize uploader as the "artist" field in video metadata</span>
$<span class=w> </span>yt-dlp<span class=w> </span>--parse-metadata<span class=w> </span><span class=s2>"%(uploader|)s:%(meta_artist)s"</span><span class=w> </span>--embed-metadata

<span class=c1># Set "comment" field in video metadata using description instead of webpage_url,</span>
<span class=c1># handling multiple lines correctly</span>
$<span class=w> </span>yt-dlp<span class=w> </span>--parse-metadata<span class=w> </span><span class=s2>"description:(?s)(?P&lt;meta_comment&gt;.+)"</span><span class=w> </span>--embed-metadata

<span class=c1># Do not set any "synopsis" in the video metadata</span>
$<span class=w> </span>yt-dlp<span class=w> </span>--parse-metadata<span class=w> </span><span class=s2>":(?P&lt;meta_synopsis&gt;)"</span>

<span class=c1># Remove "formats" field from the infojson by setting it to an empty string</span>
$<span class=w> </span>yt-dlp<span class=w> </span>--parse-metadata<span class=w> </span><span class=s2>"video::(?P&lt;formats&gt;)"</span><span class=w> </span>--write-info-json

<span class=c1># Replace all spaces and "_" in title and uploader with a `-`</span>
$<span class=w> </span>yt-dlp<span class=w> </span>--replace-in-metadata<span class=w> </span><span class=s2>"title,uploader"</span><span class=w> </span><span class=s2>"[ _]"</span><span class=w> </span><span class=s2>"-"</span>
</pre>
<h1>EXTRACTOR ARGUMENTS</h1>
<p>Some extractors accept additional arguments which can be passed using <code>--extractor-args KEY:ARGS</code>. <code>ARGS</code> is a <code>;</code> (semicolon) separated string of <code>ARG=VAL1,VAL2</code>. E.g. <code>--extractor-args "youtube:player-client=android_embedded,web;include_live_dash" --extractor-args "funimation:version=uncut"</code></p>
<p>Note: In CLI, <code>ARG</code> can use <code>-</code> instead of <code>_</code>; e.g. <code>youtube:player-client"</code> becomes <code>youtube:player_client"</code></p>
<p>The following extractors use this feature:</p>
<h4>youtube</h4>
<ul>
<li><code>lang</code>: Prefer translated metadata (<code>title</code>, <code>description</code> etc) of this language code (case-sensitive). By default, the video primary language metadata is preferred, with a fallback to <code>en</code> translated. See <a href="https://github.com/yt-dlp/yt-dlp/blob/c26f9b991a0681fd3ea548d535919cec1fbbd430/yt_dlp/extractor/youtube.py#L381-L390" rel=nofollow>youtube.py</a> for list of supported content language codes</li>
<li><code>skip</code>: One or more of <code>hls</code>, <code>dash</code> or <code>translated_subs</code> to skip extraction of the m3u8 manifests, dash manifests and <a href="https://github.com/yt-dlp/yt-dlp/issues/4090#issuecomment-1158102032" rel=nofollow>auto-translated subtitles</a> respectively</li>
<li><code>player_client</code>: Clients to extract video data from. The main clients are <code>web</code>, <code>android</code> and <code>ios</code> with variants <code>_music</code>, <code>_embedded</code>, <code>_embedscreen</code>, <code>_creator</code> (e.g. <code>web_embedded</code>); and <code>mweb</code> and <code>tv_embedded</code> (agegate bypass) with no variants. By default, <code>ios,android,web</code> is used, but <code>tv_embedded</code> and <code>creator</code> variants are added as required for age-gated videos. Similarly, the music variants are added for <code>music.youtube.com</code> urls. You can use <code>all</code> to use all the clients, and <code>default</code> for the default clients.</li>
<li><code>player_skip</code>: Skip some network requests that are generally needed for robust extraction. One or more of <code>configs</code> (skip client configs), <code>webpage</code> (skip initial webpage), <code>js</code> (skip js player). While these options can help reduce the number of requests needed or avoid some rate-limiting, they could cause some issues. See <a href="https://github.com/yt-dlp/yt-dlp/pull/860" rel=nofollow>#860</a> for more details</li>
<li><code>comment_sort</code>: <code>top</code> or <code>new</code> (default) - choose comment sorting mode (on YouTube's side)</li>
<li><code>max_comments</code>: Limit the amount of comments to gather. Comma-separated list of integers representing <code>max-comments,max-parents,max-replies,max-replies-per-thread</code>. Default is <code>all,all,all,all</code>
<ul>
<li>E.g. <code>all,all,1000,10</code> will get a maximum of 1000 replies total, with up to 10 replies per thread. <code>1000,all,100</code> will get a maximum of 1000 comments, with a maximum of 100 replies total</li>
</ul>
</li>
<li><code>formats</code>: Change the types of formats to return. <code>dashy</code> (convert HTTP to DASH), <code>duplicate</code> (identical content but different URLs or protocol; includes <code>dashy</code>), <code>incomplete</code> (cannot be downloaded completely - live dash and post-live m3u8)</li>
<li><code>innertube_host</code>: Innertube API host to use for all API requests; e.g. <code>studio.youtube.com</code>, <code>youtubei.googleapis.com</code>. Note that cookies exported from one subdomain will not work on others</li>
<li><code>innertube_key</code>: Innertube API key to use for all API requests</li>
</ul>
<h4>youtubetab (YouTube playlists, channels, feeds, etc.)</h4>
<ul>
<li><code>skip</code>: One or more of <code>webpage</code> (skip initial webpage download), <code>authcheck</code> (allow the download of playlists requiring authentication when no initial webpage is downloaded. This may cause unwanted behavior, see <a href="https://github.com/yt-dlp/yt-dlp/pull/1122" rel=nofollow>#1122</a> for more details)</li>
<li><code>approximate_date</code>: Extract approximate <code>upload_date</code> and <code>timestamp</code> in flat-playlist. This may cause date-based filters to be slightly off</li>
</ul>
<h4>generic</h4>
<ul>
<li><code>fragment_query</code>: Passthrough any query in mpd/m3u8 manifest URLs to their fragments if no value is provided, or else apply the query string given as <code>fragment_query=VALUE</code>. Does not apply to ffmpeg</li>
<li><code>variant_query</code>: Passthrough the master m3u8 URL query to its variant playlist URLs if no value is provided, or else apply the query string given as <code>variant_query=VALUE</code></li>
<li><code>hls_key</code>: An HLS AES-128 key URI <em>or</em> key (as hex), and optionally the IV (as hex), in the form of <code>(URI|KEY)[,IV]</code>; e.g. <code>generic:hls_key=ABCDEF1234567980,0xFEDCBA0987654321</code>. Passing any of these values will force usage of the native HLS downloader and override the corresponding values found in the m3u8 playlist</li>
<li><code>is_live</code>: Bypass live HLS detection and manually set <code>live_status</code> - a value of <code>false</code> will set <code>not_live</code>, any other value (or no value) will set <code>is_live</code></li>
</ul>
<h4>funimation</h4>
<ul>
<li><code>language</code>: Audio languages to extract, e.g. <code>funimation:language=english,japanese</code></li>
<li><code>version</code>: The video version to extract - <code>uncut</code> or <code>simulcast</code></li>
</ul>
<h4>crunchyrollbeta (Crunchyroll)</h4>
<ul>
<li><code>format</code>: Which stream type(s) to extract (default: <code>adaptive_hls</code>). Potentially useful values include <code>adaptive_hls</code>, <code>adaptive_dash</code>, <code>vo_adaptive_hls</code>, <code>vo_adaptive_dash</code>, <code>download_hls</code>, <code>download_dash</code>, <code>multitrack_adaptive_hls_v2</code></li>
<li><code>hardsub</code>: Preference order for which hardsub versions to extract, or <code>all</code> (default: <code>None</code> = no hardsubs), e.g. <code>crunchyrollbeta:hardsub=en-US,None</code></li>
</ul>
<h4>vikichannel</h4>
<ul>
<li><code>video_types</code>: Types of videos to download - one or more of <code>episodes</code>, <code>movies</code>, <code>clips</code>, <code>trailers</code></li>
</ul>
<h4>niconico</h4>
<ul>
<li><code>segment_duration</code>: Segment duration in milliseconds for HLS-DMC formats. Use it at your own risk since this feature <strong>may result in your account termination.</strong></li>
</ul>
<h4>youtubewebarchive</h4>
<ul>
<li><code>check_all</code>: Try to check more at the cost of more requests. One or more of <code>thumbnails</code>, <code>captures</code></li>
</ul>
<h4>gamejolt</h4>
<ul>
<li><code>comment_sort</code>: <code>hot</code> (default), <code>you</code> (cookies needed), <code>top</code>, <code>new</code> - choose comment sorting mode (on GameJolt's side)</li>
</ul>
<h4>hotstar</h4>
<ul>
<li><code>res</code>: resolution to ignore - one or more of <code>sd</code>, <code>hd</code>, <code>fhd</code></li>
<li><code>vcodec</code>: vcodec to ignore - one or more of <code>h264</code>, <code>h265</code>, <code>dvh265</code></li>
<li><code>dr</code>: dynamic range to ignore - one or more of <code>sdr</code>, <code>hdr10</code>, <code>dv</code></li>
</ul>
<h4>tiktok</h4>
<ul>
<li><code>api_hostname</code>: Hostname to use for mobile API requests, e.g. <code>api-h2.tiktokv.com</code></li>
<li><code>app_version</code>: App version to call mobile APIs with - should be set along with <code>manifest_app_version</code>, e.g. <code>20.2.1</code></li>
<li><code>manifest_app_version</code>: Numeric app version to call mobile APIs with, e.g. <code>221</code></li>
</ul>
<h4>rokfinchannel</h4>
<ul>
<li><code>tab</code>: Which tab to download - one of <code>new</code>, <code>top</code>, <code>videos</code>, <code>podcasts</code>, <code>streams</code>, <code>stacks</code></li>
</ul>
<h4>stacommu, wrestleuniverse</h4>
<ul>
<li><code>device_id</code>: UUID value assigned by the website and used to enforce device limits for paid livestream content. Can be found in browser local storage</li>
</ul>
<h4>twitch</h4>
<ul>
<li><code>client_id</code>: Client ID value to be sent with GraphQL requests, e.g. <code>twitch:client_id=kimne78kx3ncx6brgo4mv6wki5h1ko</code></li>
</ul>
<h4>nhkradirulive (NHK らじる★らじる LIVE)</h4>
<ul>
<li><code>area</code>: Which regional variation to extract. Valid areas are: <code>sapporo</code>, <code>sendai</code>, <code>tokyo</code>, <code>nagoya</code>, <code>osaka</code>, <code>hiroshima</code>, <code>matsuyama</code>, <code>fukuoka</code>. Defaults to <code>tokyo</code></li>
</ul>
<p><strong>Note</strong>: These options may be changed/removed in the future without concern for backward compatibility</p>

<h1>PLUGINS</h1>
<p>Note that <strong>all</strong> plugins are imported even if not invoked, and that <strong>there are no checks</strong> performed on plugin code. <strong>Use plugins at your own risk and only if you trust the code!</strong></p>
<p>Plugins can be of <code>&lt;type&gt;</code>s <code>extractor</code> or <code>postprocessor</code>.</p>
<ul>
<li>Extractor plugins do not need to be enabled from the CLI and are automatically invoked when the input URL is suitable for it.</li>
<li>Extractor plugins take priority over builtin extractors.</li>
<li>Postprocessor plugins can be invoked using <code>--use-postprocessor NAME</code>.</li>
</ul>
<p>Plugins are loaded from the namespace packages <code>yt_dlp_plugins.extractor</code> and <code>yt_dlp_plugins.postprocessor</code>.</p>
<p>In other words, the file structure on the disk looks something like:</p>
<pre><code>    yt_dlp_plugins/
        extractor/
            myplugin.py
        postprocessor/
            myplugin.py
</code></pre>
<p>yt-dlp looks for these <code>yt_dlp_plugins</code> namespace folders in many locations (see below) and loads in plugins from <strong>all</strong> of them.</p>
<p>See the <a href="https://github.com/yt-dlp/yt-dlp/wiki/Plugins" rel=nofollow>wiki for some known plugins</a></p>
<h2>Installing Plugins</h2>
<p>Plugins can be installed using various methods and locations.</p>
<ol>
<li>
<p><strong>Configuration directories</strong>:
Plugin packages (containing a <code>yt_dlp_plugins</code> namespace folder) can be dropped into the following standard <a href=#configuration rel=nofollow>configuration locations</a>:</p>
<ul>
<li><strong>User Plugins</strong>
<ul>
<li><code>${XDG_CONFIG_HOME}/yt-dlp/plugins/&lt;package name&gt;/yt_dlp_plugins/</code> (recommended on Linux/macOS)</li>
<li><code>${XDG_CONFIG_HOME}/yt-dlp-plugins/&lt;package name&gt;/yt_dlp_plugins/</code></li>
<li><code>${APPDATA}/yt-dlp/plugins/&lt;package name&gt;/yt_dlp_plugins/</code> (recommended on Windows)</li>
<li><code>${APPDATA}/yt-dlp-plugins/&lt;package name&gt;/yt_dlp_plugins/</code></li>
<li><code>~/.yt-dlp/plugins/&lt;package name&gt;/yt_dlp_plugins/</code></li>
<li><code>~/yt-dlp-plugins/&lt;package name&gt;/yt_dlp_plugins/</code></li>
</ul>
</li>
<li><strong>System Plugins</strong>
<ul>
<li><code>/etc/yt-dlp/plugins/&lt;package name&gt;/yt_dlp_plugins/</code></li>
<li><code>/etc/yt-dlp-plugins/&lt;package name&gt;/yt_dlp_plugins/</code></li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>Executable location</strong>: Plugin packages can similarly be installed in a <code>yt-dlp-plugins</code> directory under the executable location (recommended for portable installations):</p>
<ul>
<li>Binary: where <code>&lt;root-dir&gt;/yt-dlp.exe</code>, <code>&lt;root-dir&gt;/yt-dlp-plugins/&lt;package name&gt;/yt_dlp_plugins/</code></li>
<li>Source: where <code>&lt;root-dir&gt;/yt_dlp/__main__.py</code>, <code>&lt;root-dir&gt;/yt-dlp-plugins/&lt;package name&gt;/yt_dlp_plugins/</code></li>
</ul>
</li>
<li>
<p><strong>pip and other locations in <code>PYTHONPATH</code></strong></p>
<ul>
<li>Plugin packages can be installed and managed using <code>pip</code>. See <a href="https://github.com/yt-dlp/yt-dlp-sample-plugins" rel=nofollow>yt-dlp-sample-plugins</a> for an example.
<ul>
<li>Note: plugin files between plugin packages installed with pip must have unique filenames.</li>
</ul>
</li>
<li>Any path in <code>PYTHONPATH</code> is searched in for the <code>yt_dlp_plugins</code> namespace folder.
<ul>
<li>Note: This does not apply for Pyinstaller/py2exe builds.</li>
</ul>
</li>
</ul>
</li>
</ol>
<p><code>.zip</code>, <code>.egg</code> and <code>.whl</code> archives containing a <code>yt_dlp_plugins</code> namespace folder in their root are also supported as plugin packages.</p>
<ul>
<li>e.g. <code>${XDG_CONFIG_HOME}/yt-dlp/plugins/mypluginpkg.zip</code> where <code>mypluginpkg.zip</code> contains <code>yt_dlp_plugins/&lt;type&gt;/myplugin.py</code></li>
</ul>
<p>Run yt-dlp with <code>--verbose</code> to check if the plugin has been loaded.</p>
<h2>Developing Plugins</h2>
<p>See the <a href="https://github.com/yt-dlp/yt-dlp-sample-plugins" rel=nofollow>yt-dlp-sample-plugins</a> repo for a template plugin package and the <a href="https://github.com/yt-dlp/yt-dlp/wiki/Plugin-Development" rel=nofollow>Plugin Development</a> section of the wiki for a plugin development guide.</p>
<p>All public classes with a name ending in <code>IE</code>/<code>PP</code> are imported from each file for extractors and postprocessors repectively. This respects underscore prefix (e.g. <code>_MyBasePluginIE</code> is private) and <code>__all__</code>. Modules can similarly be excluded by prefixing the module name with an underscore (e.g. <code>_myplugin.py</code>).</p>
<p>To replace an existing extractor with a subclass of one, set the <code>plugin_name</code> class keyword argument (e.g. <code>class MyPluginIE(ABuiltInIE, plugin_name='myplugin')</code> will replace <code>ABuiltInIE</code> with <code>MyPluginIE</code>). Since the extractor replaces the parent, you should exclude the subclass extractor from being imported separately by making it private using one of the methods described above.</p>
<p>If you are a plugin author, add <a href="https://github.com/topics/yt-dlp-plugins" rel=nofollow>yt-dlp-plugins</a> as a topic to your repository for discoverability.</p>
<p>See the <a href="https://github.com/yt-dlp/yt-dlp/blob/master/CONTRIBUTING.md#developer-instructions" rel=nofollow>Developer Instructions</a> on how to write and test an extractor.</p>
<h1>EMBEDDING YT-DLP</h1>
<p>yt-dlp makes the best effort to be a good command-line program, and thus should be callable from any programming language.</p>
<p>Your program should avoid parsing the normal stdout since they may change in future versions. Instead they should use options such as <code>-J</code>, <code>--print</code>, <code>--progress-template</code>, <code>--exec</code> etc to create console output that you can reliably reproduce and parse.</p>
<p>From a Python program, you can embed yt-dlp in a more powerful fashion, like this:</p>
<pre lang=python3><span class=kn>from</span> <span class=nn>yt_dlp</span> <span class=kn>import</span> <span class=n>YoutubeDL</span>

<span class=n>URLS</span> <span class=o>=</span> <span class=p>[</span><span class=s1>'https://www.youtube.com/watch?v=BaW_jenozKc'</span><span class=p>]</span>
<span class=k>with</span> <span class=n>YoutubeDL</span><span class=p>()</span> <span class=k>as</span> <span class=n>ydl</span><span class=p>:</span>
    <span class=n>ydl</span><span class=o>.</span><span class=n>download</span><span class=p>(</span><span class=n>URLS</span><span class=p>)</span>
</pre>
<p>Most likely, you'll want to use various options. For a list of options available, have a look at <a href="yt_dlp/YoutubeDL.py#L183" rel=nofollow><code>yt_dlp/YoutubeDL.py</code></a> or <code>help(yt_dlp.YoutubeDL)</code> in a Python shell. If you are already familiar with the CLI, you can use <a href="https://github.com/yt-dlp/yt-dlp/blob/master/devscripts/cli_to_api.py" rel=nofollow><code>devscripts/cli_to_api.py</code></a> to translate any CLI switches to <code>YoutubeDL</code> params.</p>
<p><strong>Tip</strong>: If you are porting your code from youtube-dl to yt-dlp, one important point to look out for is that we do not guarantee the return value of <code>YoutubeDL.extract_info</code> to be json serializable, or even be a dictionary. It will be dictionary-like, but if you want to ensure it is a serializable dictionary, pass it through <code>YoutubeDL.sanitize_info</code> as shown in the <a href=#extracting-information rel=nofollow>example below</a></p>
<h2>Embedding examples</h2>
<h4>Extracting information</h4>
<pre lang=python3><span class=kn>import</span> <span class=nn>json</span>
<span class=kn>import</span> <span class=nn>yt_dlp</span>

<span class=n>URL</span> <span class=o>=</span> <span class=s1>'https://www.youtube.com/watch?v=BaW_jenozKc'</span>

<span class=c1># ℹ️ See help(yt_dlp.YoutubeDL) for a list of available options and public functions</span>
<span class=n>ydl_opts</span> <span class=o>=</span> <span class=p>{}</span>
<span class=k>with</span> <span class=n>yt_dlp</span><span class=o>.</span><span class=n>YoutubeDL</span><span class=p>(</span><span class=n>ydl_opts</span><span class=p>)</span> <span class=k>as</span> <span class=n>ydl</span><span class=p>:</span>
    <span class=n>info</span> <span class=o>=</span> <span class=n>ydl</span><span class=o>.</span><span class=n>extract_info</span><span class=p>(</span><span class=n>URL</span><span class=p>,</span> <span class=n>download</span><span class=o>=</span><span class=kc>False</span><span class=p>)</span>

    <span class=c1># ℹ️ ydl.sanitize_info makes the info json-serializable</span>
    <span class=nb>print</span><span class=p>(</span><span class=n>json</span><span class=o>.</span><span class=n>dumps</span><span class=p>(</span><span class=n>ydl</span><span class=o>.</span><span class=n>sanitize_info</span><span class=p>(</span><span class=n>info</span><span class=p>)))</span>
</pre>
<h4>Download using an info-json</h4>
<pre lang=python3><span class=kn>import</span> <span class=nn>yt_dlp</span>

<span class=n>INFO_FILE</span> <span class=o>=</span> <span class=s1>'path/to/video.info.json'</span>

<span class=k>with</span> <span class=n>yt_dlp</span><span class=o>.</span><span class=n>YoutubeDL</span><span class=p>()</span> <span class=k>as</span> <span class=n>ydl</span><span class=p>:</span>
    <span class=n>error_code</span> <span class=o>=</span> <span class=n>ydl</span><span class=o>.</span><span class=n>download_with_info_file</span><span class=p>(</span><span class=n>INFO_FILE</span><span class=p>)</span>

<span class=nb>print</span><span class=p>(</span><span class=s1>'Some videos failed to download'</span> <span class=k>if</span> <span class=n>error_code</span>
      <span class=k>else</span> <span class=s1>'All videos successfully downloaded'</span><span class=p>)</span>
</pre>
<h4>Extract audio</h4>
<pre lang=python3><span class=kn>import</span> <span class=nn>yt_dlp</span>

<span class=n>URLS</span> <span class=o>=</span> <span class=p>[</span><span class=s1>'https://www.youtube.com/watch?v=BaW_jenozKc'</span><span class=p>]</span>

<span class=n>ydl_opts</span> <span class=o>=</span> <span class=p>{</span>
    <span class=s1>'format'</span><span class=p>:</span> <span class=s1>'m4a/bestaudio/best'</span><span class=p>,</span>
    <span class=c1># ℹ️ See help(yt_dlp.postprocessor) for a list of available Postprocessors and their arguments</span>
    <span class=s1>'postprocessors'</span><span class=p>:</span> <span class=p>[{</span>  <span class=c1># Extract audio using ffmpeg</span>
        <span class=s1>'key'</span><span class=p>:</span> <span class=s1>'FFmpegExtractAudio'</span><span class=p>,</span>
        <span class=s1>'preferredcodec'</span><span class=p>:</span> <span class=s1>'m4a'</span><span class=p>,</span>
    <span class=p>}]</span>
<span class=p>}</span>

<span class=k>with</span> <span class=n>yt_dlp</span><span class=o>.</span><span class=n>YoutubeDL</span><span class=p>(</span><span class=n>ydl_opts</span><span class=p>)</span> <span class=k>as</span> <span class=n>ydl</span><span class=p>:</span>
    <span class=n>error_code</span> <span class=o>=</span> <span class=n>ydl</span><span class=o>.</span><span class=n>download</span><span class=p>(</span><span class=n>URLS</span><span class=p>)</span>
</pre>
<h4>Filter videos</h4>
<pre lang=python3><span class=kn>import</span> <span class=nn>yt_dlp</span>

<span class=n>URLS</span> <span class=o>=</span> <span class=p>[</span><span class=s1>'https://www.youtube.com/watch?v=BaW_jenozKc'</span><span class=p>]</span>

<span class=k>def</span> <span class=nf>longer_than_a_minute</span><span class=p>(</span><span class=n>info</span><span class=p>,</span> <span class=o>*</span><span class=p>,</span> <span class=n>incomplete</span><span class=p>):</span>
<span class=w>    </span><span class=sd>"""Download only videos longer than a minute (or with unknown duration)"""</span>
    <span class=n>duration</span> <span class=o>=</span> <span class=n>info</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'duration'</span><span class=p>)</span>
    <span class=k>if</span> <span class=n>duration</span> <span class=ow>and</span> <span class=n>duration</span> <span class=o>&lt;</span> <span class=mi>60</span><span class=p>:</span>
        <span class=k>return</span> <span class=s1>'The video is too short'</span>

<span class=n>ydl_opts</span> <span class=o>=</span> <span class=p>{</span>
    <span class=s1>'match_filter'</span><span class=p>:</span> <span class=n>longer_than_a_minute</span><span class=p>,</span>
<span class=p>}</span>

<span class=k>with</span> <span class=n>yt_dlp</span><span class=o>.</span><span class=n>YoutubeDL</span><span class=p>(</span><span class=n>ydl_opts</span><span class=p>)</span> <span class=k>as</span> <span class=n>ydl</span><span class=p>:</span>
    <span class=n>error_code</span> <span class=o>=</span> <span class=n>ydl</span><span class=o>.</span><span class=n>download</span><span class=p>(</span><span class=n>URLS</span><span class=p>)</span>
</pre>
<h4>Adding logger and progress hook</h4>
<pre lang=python3><span class=kn>import</span> <span class=nn>yt_dlp</span>

<span class=n>URLS</span> <span class=o>=</span> <span class=p>[</span><span class=s1>'https://www.youtube.com/watch?v=BaW_jenozKc'</span><span class=p>]</span>

<span class=k>class</span> <span class=nc>MyLogger</span><span class=p>:</span>
    <span class=k>def</span> <span class=nf>debug</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>msg</span><span class=p>):</span>
        <span class=c1># For compatibility with youtube-dl, both debug and info are passed into debug</span>
        <span class=c1># You can distinguish them by the prefix '[debug] '</span>
        <span class=k>if</span> <span class=n>msg</span><span class=o>.</span><span class=n>startswith</span><span class=p>(</span><span class=s1>'[debug] '</span><span class=p>):</span>
            <span class=k>pass</span>
        <span class=k>else</span><span class=p>:</span>
            <span class=bp>self</span><span class=o>.</span><span class=n>info</span><span class=p>(</span><span class=n>msg</span><span class=p>)</span>

    <span class=k>def</span> <span class=nf>info</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>msg</span><span class=p>):</span>
        <span class=k>pass</span>

    <span class=k>def</span> <span class=nf>warning</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>msg</span><span class=p>):</span>
        <span class=k>pass</span>

    <span class=k>def</span> <span class=nf>error</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>msg</span><span class=p>):</span>
        <span class=nb>print</span><span class=p>(</span><span class=n>msg</span><span class=p>)</span>


<span class=c1># ℹ️ See "progress_hooks" in help(yt_dlp.YoutubeDL)</span>
<span class=k>def</span> <span class=nf>my_hook</span><span class=p>(</span><span class=n>d</span><span class=p>):</span>
    <span class=k>if</span> <span class=n>d</span><span class=p>[</span><span class=s1>'status'</span><span class=p>]</span> <span class=o>==</span> <span class=s1>'finished'</span><span class=p>:</span>
        <span class=nb>print</span><span class=p>(</span><span class=s1>'Done downloading, now post-processing ...'</span><span class=p>)</span>


<span class=n>ydl_opts</span> <span class=o>=</span> <span class=p>{</span>
    <span class=s1>'logger'</span><span class=p>:</span> <span class=n>MyLogger</span><span class=p>(),</span>
    <span class=s1>'progress_hooks'</span><span class=p>:</span> <span class=p>[</span><span class=n>my_hook</span><span class=p>],</span>
<span class=p>}</span>

<span class=k>with</span> <span class=n>yt_dlp</span><span class=o>.</span><span class=n>YoutubeDL</span><span class=p>(</span><span class=n>ydl_opts</span><span class=p>)</span> <span class=k>as</span> <span class=n>ydl</span><span class=p>:</span>
    <span class=n>ydl</span><span class=o>.</span><span class=n>download</span><span class=p>(</span><span class=n>URLS</span><span class=p>)</span>
</pre>
<h4>Add a custom PostProcessor</h4>
<pre lang=python3><span class=kn>import</span> <span class=nn>yt_dlp</span>

<span class=n>URLS</span> <span class=o>=</span> <span class=p>[</span><span class=s1>'https://www.youtube.com/watch?v=BaW_jenozKc'</span><span class=p>]</span>

<span class=c1># ℹ️ See help(yt_dlp.postprocessor.PostProcessor)</span>
<span class=k>class</span> <span class=nc>MyCustomPP</span><span class=p>(</span><span class=n>yt_dlp</span><span class=o>.</span><span class=n>postprocessor</span><span class=o>.</span><span class=n>PostProcessor</span><span class=p>):</span>
    <span class=k>def</span> <span class=nf>run</span><span class=p>(</span><span class=bp>self</span><span class=p>,</span> <span class=n>info</span><span class=p>):</span>
        <span class=bp>self</span><span class=o>.</span><span class=n>to_screen</span><span class=p>(</span><span class=s1>'Doing stuff'</span><span class=p>)</span>
        <span class=k>return</span> <span class=p>[],</span> <span class=n>info</span>


<span class=k>with</span> <span class=n>yt_dlp</span><span class=o>.</span><span class=n>YoutubeDL</span><span class=p>()</span> <span class=k>as</span> <span class=n>ydl</span><span class=p>:</span>
    <span class=c1># ℹ️ "when" can take any value in yt_dlp.utils.POSTPROCESS_WHEN</span>
    <span class=n>ydl</span><span class=o>.</span><span class=n>add_post_processor</span><span class=p>(</span><span class=n>MyCustomPP</span><span class=p>(),</span> <span class=n>when</span><span class=o>=</span><span class=s1>'pre_process'</span><span class=p>)</span>
    <span class=n>ydl</span><span class=o>.</span><span class=n>download</span><span class=p>(</span><span class=n>URLS</span><span class=p>)</span>
</pre>
<h4>Use a custom format selector</h4>
<pre lang=python3><span class=kn>import</span> <span class=nn>yt_dlp</span>

<span class=n>URLS</span> <span class=o>=</span> <span class=p>[</span><span class=s1>'https://www.youtube.com/watch?v=BaW_jenozKc'</span><span class=p>]</span>

<span class=k>def</span> <span class=nf>format_selector</span><span class=p>(</span><span class=n>ctx</span><span class=p>):</span>
<span class=w>    </span><span class=sd>""" Select the best video and the best audio that won't result in an mkv.</span>
<span class=sd>    NOTE: This is just an example and does not handle all cases """</span>

    <span class=c1># formats are already sorted worst to best</span>
    <span class=n>formats</span> <span class=o>=</span> <span class=n>ctx</span><span class=o>.</span><span class=n>get</span><span class=p>(</span><span class=s1>'formats'</span><span class=p>)[::</span><span class=o>-</span><span class=mi>1</span><span class=p>]</span>

    <span class=c1># acodec='none' means there is no audio</span>
    <span class=n>best_video</span> <span class=o>=</span> <span class=nb>next</span><span class=p>(</span><span class=n>f</span> <span class=k>for</span> <span class=n>f</span> <span class=ow>in</span> <span class=n>formats</span>
                      <span class=k>if</span> <span class=n>f</span><span class=p>[</span><span class=s1>'vcodec'</span><span class=p>]</span> <span class=o>!=</span> <span class=s1>'none'</span> <span class=ow>and</span> <span class=n>f</span><span class=p>[</span><span class=s1>'acodec'</span><span class=p>]</span> <span class=o>==</span> <span class=s1>'none'</span><span class=p>)</span>

    <span class=c1># find compatible audio extension</span>
    <span class=n>audio_ext</span> <span class=o>=</span> <span class=p>{</span><span class=s1>'mp4'</span><span class=p>:</span> <span class=s1>'m4a'</span><span class=p>,</span> <span class=s1>'webm'</span><span class=p>:</span> <span class=s1>'webm'</span><span class=p>}[</span><span class=n>best_video</span><span class=p>[</span><span class=s1>'ext'</span><span class=p>]]</span>
    <span class=c1># vcodec='none' means there is no video</span>
    <span class=n>best_audio</span> <span class=o>=</span> <span class=nb>next</span><span class=p>(</span><span class=n>f</span> <span class=k>for</span> <span class=n>f</span> <span class=ow>in</span> <span class=n>formats</span> <span class=k>if</span> <span class=p>(</span>
        <span class=n>f</span><span class=p>[</span><span class=s1>'acodec'</span><span class=p>]</span> <span class=o>!=</span> <span class=s1>'none'</span> <span class=ow>and</span> <span class=n>f</span><span class=p>[</span><span class=s1>'vcodec'</span><span class=p>]</span> <span class=o>==</span> <span class=s1>'none'</span> <span class=ow>and</span> <span class=n>f</span><span class=p>[</span><span class=s1>'ext'</span><span class=p>]</span> <span class=o>==</span> <span class=n>audio_ext</span><span class=p>))</span>

    <span class=c1># These are the minimum required fields for a merged format</span>
    <span class=k>yield</span> <span class=p>{</span>
        <span class=s1>'format_id'</span><span class=p>:</span> <span class=sa>f</span><span class=s1>'</span><span class=si>{</span><span class=n>best_video</span><span class=p>[</span><span class=s2>"format_id"</span><span class=p>]</span><span class=si>}</span><span class=s1>+</span><span class=si>{</span><span class=n>best_audio</span><span class=p>[</span><span class=s2>"format_id"</span><span class=p>]</span><span class=si>}</span><span class=s1>'</span><span class=p>,</span>
        <span class=s1>'ext'</span><span class=p>:</span> <span class=n>best_video</span><span class=p>[</span><span class=s1>'ext'</span><span class=p>],</span>
        <span class=s1>'requested_formats'</span><span class=p>:</span> <span class=p>[</span><span class=n>best_video</span><span class=p>,</span> <span class=n>best_audio</span><span class=p>],</span>
        <span class=c1># Must be + separated list of protocols</span>
        <span class=s1>'protocol'</span><span class=p>:</span> <span class=sa>f</span><span class=s1>'</span><span class=si>{</span><span class=n>best_video</span><span class=p>[</span><span class=s2>"protocol"</span><span class=p>]</span><span class=si>}</span><span class=s1>+</span><span class=si>{</span><span class=n>best_audio</span><span class=p>[</span><span class=s2>"protocol"</span><span class=p>]</span><span class=si>}</span><span class=s1>'</span>
    <span class=p>}</span>


<span class=n>ydl_opts</span> <span class=o>=</span> <span class=p>{</span>
    <span class=s1>'format'</span><span class=p>:</span> <span class=n>format_selector</span><span class=p>,</span>
<span class=p>}</span>

<span class=k>with</span> <span class=n>yt_dlp</span><span class=o>.</span><span class=n>YoutubeDL</span><span class=p>(</span><span class=n>ydl_opts</span><span class=p>)</span> <span class=k>as</span> <span class=n>ydl</span><span class=p>:</span>
    <span class=n>ydl</span><span class=o>.</span><span class=n>download</span><span class=p>(</span><span class=n>URLS</span><span class=p>)</span>
</pre>

<h1>DEPRECATED OPTIONS</h1>
<p>These are all the deprecated options and the current alternative to achieve the same effect</p>
<h4>Almost redundant options</h4>
<p>While these options are almost the same as their new counterparts, there are some differences that prevents them being redundant</p>
<pre><code>-j, --dump-json                  --print "%()j"
-F, --list-formats               --print formats_table
--list-thumbnails                --print thumbnails_table --print playlist:thumbnails_table
--list-subs                      --print automatic_captions_table --print subtitles_table
</code></pre>
<h4>Redundant options</h4>
<p>While these options are redundant, they are still expected to be used due to their ease of use</p>
<pre><code>--get-description                --print description
--get-duration                   --print duration_string
--get-filename                   --print filename
--get-format                     --print format
--get-id                         --print id
--get-thumbnail                  --print thumbnail
-e, --get-title                  --print title
-g, --get-url                    --print urls
--match-title REGEX              --match-filter "title ~= (?i)REGEX"
--reject-title REGEX             --match-filter "title !~= (?i)REGEX"
--min-views COUNT                --match-filter "view_count &gt;=? COUNT"
--max-views COUNT                --match-filter "view_count &lt;=? COUNT"
--break-on-reject                Use --break-match-filter
--user-agent UA                  --add-header "User-Agent:UA"
--referer URL                    --add-header "Referer:URL"
--playlist-start NUMBER          -I NUMBER:
--playlist-end NUMBER            -I :NUMBER
--playlist-reverse               -I ::-1
--no-playlist-reverse            Default
--no-colors                      --color no_color
</code></pre>
<h4>Not recommended</h4>
<p>While these options still work, their use is not recommended since there are other alternatives to achieve the same</p>
<pre><code>--force-generic-extractor        --ies generic,default
--exec-before-download CMD       --exec "before_dl:CMD"
--no-exec-before-download        --no-exec
--all-formats                    -f all
--all-subs                       --sub-langs all --write-subs
--print-json                     -j --no-simulate
--autonumber-size NUMBER         Use string formatting, e.g. %(autonumber)03d
--autonumber-start NUMBER        Use internal field formatting like %(autonumber+NUMBER)s
--id                             -o "%(id)s.%(ext)s"
--metadata-from-title FORMAT     --parse-metadata "%(title)s:FORMAT"
--hls-prefer-native              --downloader "m3u8:native"
--hls-prefer-ffmpeg              --downloader "m3u8:ffmpeg"
--list-formats-old               --compat-options list-formats (Alias: --no-list-formats-as-table)
--list-formats-as-table          --compat-options -list-formats [Default] (Alias: --no-list-formats-old)
--youtube-skip-dash-manifest     --extractor-args "youtube:skip=dash" (Alias: --no-youtube-include-dash-manifest)
--youtube-skip-hls-manifest      --extractor-args "youtube:skip=hls" (Alias: --no-youtube-include-hls-manifest)
--youtube-include-dash-manifest  Default (Alias: --no-youtube-skip-dash-manifest)
--youtube-include-hls-manifest   Default (Alias: --no-youtube-skip-hls-manifest)
--geo-bypass                     --xff "default"
--no-geo-bypass                  --xff "never"
--geo-bypass-country CODE        --xff CODE
--geo-bypass-ip-block IP_BLOCK   --xff IP_BLOCK
</code></pre>
<h4>Developer options</h4>
<p>These options are not intended to be used by the end-user</p>
<pre><code>--test                           Download only part of video for testing extractors
--load-pages                     Load pages dumped by --write-pages
--youtube-print-sig-code         For testing youtube signatures
--allow-unplayable-formats       List unplayable formats also
--no-allow-unplayable-formats    Default
</code></pre>
<h4>Old aliases</h4>
<p>These are aliases that are no longer documented for various reasons</p>
<pre><code>--avconv-location                --ffmpeg-location
--clean-infojson                 --clean-info-json
--cn-verification-proxy URL      --geo-verification-proxy URL
--dump-headers                   --print-traffic
--dump-intermediate-pages        --dump-pages
--force-write-download-archive   --force-write-archive
--load-info                      --load-info-json
--no-clean-infojson              --no-clean-info-json
--no-split-tracks                --no-split-chapters
--no-write-srt                   --no-write-subs
--prefer-unsecure                --prefer-insecure
--rate-limit RATE                --limit-rate RATE
--split-tracks                   --split-chapters
--srt-lang LANGS                 --sub-langs LANGS
--trim-file-names LENGTH         --trim-filenames LENGTH
--write-srt                      --write-subs
--yes-overwrites                 --force-overwrites
</code></pre>
<h4>Sponskrub Options</h4>
<p>Support for <a href="https://github.com/faissaloo/SponSkrub" rel=nofollow>SponSkrub</a> has been deprecated in favor of the <code>--sponsorblock</code> options</p>
<pre><code>--sponskrub                      --sponsorblock-mark all
--no-sponskrub                   --no-sponsorblock
--sponskrub-cut                  --sponsorblock-remove all
--no-sponskrub-cut               --sponsorblock-remove -all
--sponskrub-force                Not applicable
--no-sponskrub-force             Not applicable
--sponskrub-location             Not applicable
--sponskrub-args                 Not applicable
</code></pre>
<h4>No longer supported</h4>
<p>These options may no longer work as intended</p>
<pre><code>--prefer-avconv                  avconv is not officially supported by yt-dlp (Alias: --no-prefer-ffmpeg)
--prefer-ffmpeg                  Default (Alias: --no-prefer-avconv)
-C, --call-home                  Not implemented
--no-call-home                   Default
--include-ads                    No longer supported
--no-include-ads                 Default
--write-annotations              No supported site has annotations now
--no-write-annotations           Default
--compat-options seperate-video-versions  No longer needed
</code></pre>
<h4>Removed</h4>
<p>These options were deprecated since 2014 and have now been entirely removed</p>
<pre><code>-A, --auto-number                -o "%(autonumber)s-%(id)s.%(ext)s"
-t, -l, --title, --literal       -o "%(title)s-%(id)s.%(ext)s"
</code></pre>
<h1>CONTRIBUTING</h1>
<p>See <a href=CONTRIBUTING.md#contributing-to-yt-dlp rel=nofollow>CONTRIBUTING.md</a> for instructions on <a href=CONTRIBUTING.md#opening-an-issue rel=nofollow>Opening an Issue</a> and <a href=CONTRIBUTING.md#developer-instructions rel=nofollow>Contributing code to the project</a></p>
<h1>WIKI</h1>
<p>See the <a href="https://github.com/yt-dlp/yt-dlp/wiki" rel=nofollow>Wiki</a> for more information</p>

          </div>
          
        </div>

        
        <div id="data" data-project-tabs-target="content" class="vertical-tabs__content" role="tabpanel" aria-labelledby="mobile-data-tab" tabindex="-1">
          <h2 class="page-title">Project details</h2>
          
<div class="sidebar-section">
  <h3 class="sidebar-section__title">Project links</h3>
  <ul class="vertical-tabs__list">
    
    
    <li>
      <a class="vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed" href="https://github.com/yt-dlp/yt-dlp" rel="nofollow">
        


  


<i class="fas fa-home" aria-hidden="true"></i>Homepage
      </a>
    </li>
    
    
    
    <li>
      <a class="vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed" href="https://github.com/yt-dlp/yt-dlp#readme" rel="nofollow">
        


  


<i class="fas fa-book" aria-hidden="true"></i>Documentation
      </a>
    </li>
    
    
    
    <li>
      <a class="vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed" href="https://github.com/yt-dlp/yt-dlp/blob/master/Collaborators.md#collaborators" rel="nofollow">
        


  


<i class="fas fa-donate" aria-hidden="true"></i>Funding
      </a>
    </li>
    
    
    
    <li>
      <a class="vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed" href="https://github.com/yt-dlp/yt-dlp" rel="nofollow">
        


  


<i class="fab fa-github" aria-hidden="true"></i>Source
      </a>
    </li>
    
    
    
    <li>
      <a class="vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed" href="https://github.com/yt-dlp/yt-dlp/issues" rel="nofollow">
        


  


<i class="fas fa-bug" aria-hidden="true"></i>Tracker
      </a>
    </li>
    
    
  </ul>
</div>


<div class="sidebar-section">
  <h3 class="sidebar-section__title">Statistics</h3>
  
  <div class="hidden github-repo-info" data-controller="github-repo-info">
    GitHub statistics:
    <ul class="vertical-tabs__list">
      <li>
        <a class="vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed"
           data-github-repo-info-target="stargazersUrl" rel="noopener">
          <i class="fa fa-star" aria-hidden="true"></i>
          <strong>Stars:</strong>
          <span data-github-repo-info-target="stargazersCount"></span>
        </a>
      </li>
      <li>
        <a class="vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed"
           data-github-repo-info-target="forksUrl" rel="noopener">
          <i class="fa fa-code-branch" aria-hidden="true"></i>
          <strong>Forks:</strong>
          <span data-github-repo-info-target="forksCount"></span>
        </a>
      </li>
      <li>
        <a class="vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed"
           data-github-repo-info-target="openIssuesUrl" rel="noopener">
          <i class="fa fa-exclamation-circle" aria-hidden="true"></i>
          <strong>Open issues:</strong>
          <span data-github-repo-info-target="openIssuesCount"></span>
        </a>
      </li>
      <li>
        <a class="vertical-tabs__tab vertical-tabs__tab--with-icon vertical-tabs__tab--condensed"
           data-github-repo-info-target="openPRsUrl" rel="noopener">
          <i class="fa fa-code-pull-request" aria-hidden="true"></i>
          <strong>Open PRs:</strong>
          <span data-github-repo-info-target="openPRsCount"></span>
        </a>
      </li>
    </ul>
  </div>
  
  <p>
    View statistics for this project via <a href="https://libraries.io/pypi/yt-dlp" title="External link" target="_blank" rel="noopener">Libraries.io</a>, or by using <a href="https://packaging.python.org/guides/analyzing-pypi-package-downloads/" target="_blank" rel="noopener">our public dataset on Google BigQuery</a>
  </p>
</div>


<div class="sidebar-section">
  <h3 class="sidebar-section__title">Meta</h3>
  
  <p><strong>License:</strong> Public Domain</p>
  
  
  
    <p><strong>Maintainer:</strong> <a href="mailto:pukkandan.ytdlp@gmail.com">pukkandan</a></p>
  
  
  
  <p>
    <strong>Requires:</strong> Python &gt;=3.7
  </p>
  
</div>


<div class="sidebar-section">
  
  
    <h3 class="sidebar-section__title">Maintainers</h3>
    
      
      <span class="sidebar-section__maintainer">
        <a href="/user/pukkandan/" aria-label="pukkandan">
          <span class="sidebar-section__user-gravatar">
            <img src="https://pypi-camo.global.ssl.fastly.net/b9cbb94deadb7313f6553af546d9334597075f13/68747470733a2f2f7365637572652e67726176617461722e636f6d2f6176617461722f62396139653061363733383663663034623232653937373564333031616636363f73697a653d3530" height="50" width="50" alt="Avatar for pukkandan from gravatar.com" title="Avatar for pukkandan from gravatar.com">
          </span>
          <span class="sidebar-section__user-gravatar-text">
            pukkandan
          </span>
        </a>
      </span>
    
  
</div>


<div class="sidebar-section">
  <h3 class="sidebar-section__title">Classifiers</h3>
  <ul class="sidebar-section__classifiers">
    
    <li>
      <strong>Development Status</strong>
      <ul>
        
        <li>
          <a href="/search/?c=Development+Status+%3A%3A+5+-+Production%2FStable">
            5 - Production/Stable
          </a>
        </li>
        
      </ul>
    </li>
    
    <li>
      <strong>Environment</strong>
      <ul>
        
        <li>
          <a href="/search/?c=Environment+%3A%3A+Console">
            Console
          </a>
        </li>
        
      </ul>
    </li>
    
    <li>
      <strong>License</strong>
      <ul>
        
        <li>
          <a href="/search/?c=License+%3A%3A+Public+Domain">
            Public Domain
          </a>
        </li>
        
      </ul>
    </li>
    
    <li>
      <strong>Operating System</strong>
      <ul>
        
        <li>
          <a href="/search/?c=Operating+System+%3A%3A+OS+Independent">
            OS Independent
          </a>
        </li>
        
      </ul>
    </li>
    
    <li>
      <strong>Programming Language</strong>
      <ul>
        
        <li>
          <a href="/search/?c=Programming+Language+%3A%3A+Python">
            Python
          </a>
        </li>
        
        <li>
          <a href="/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.7">
            Python :: 3.7
          </a>
        </li>
        
        <li>
          <a href="/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.8">
            Python :: 3.8
          </a>
        </li>
        
        <li>
          <a href="/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.9">
            Python :: 3.9
          </a>
        </li>
        
        <li>
          <a href="/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.10">
            Python :: 3.10
          </a>
        </li>
        
        <li>
          <a href="/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+3.11">
            Python :: 3.11
          </a>
        </li>
        
        <li>
          <a href="/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation">
            Python :: Implementation
          </a>
        </li>
        
        <li>
          <a href="/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+CPython">
            Python :: Implementation :: CPython
          </a>
        </li>
        
        <li>
          <a href="/search/?c=Programming+Language+%3A%3A+Python+%3A%3A+Implementation+%3A%3A+PyPy">
            Python :: Implementation :: PyPy
          </a>
        </li>
        
      </ul>
    </li>
    
    <li>
      <strong>Topic</strong>
      <ul>
        
        <li>
          <a href="/search/?c=Topic+%3A%3A+Multimedia+%3A%3A+Video">
            Multimedia :: Video
          </a>
        </li>
        
      </ul>
    </li>
    
  </ul>
</div>

          <br>
        </div>

        
        <div id="history" data-project-tabs-target="content" class="vertical-tabs__content" role="tabpanel" aria-labelledby="history-tab mobile-history-tab" tabindex="-1">
          <h2 class="page-title split-layout">
            <span>Release history</span>
            <span class="reset-text margin-top">
              <a href="/help/#project-release-notifications">Release notifications</a> |
              <a href="/rss/project/yt-dlp/releases.xml">RSS feed <i class="fa fa-rss" aria-hidden="true"></i></a>
            </span>
          </h2>

          <div class="release-timeline">
            
            
            
            
            <div class="release release--latest release--current">
              <div class="release__meta">
                
                <span class="badge">This version</span>
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/blue-cube.572a5bfb.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2023.7.6/">
                <p class="release__version">
                  2023.7.6
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2023-07-06T19:04:21+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jul 6, 2023
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2023.6.22/">
                <p class="release__version">
                  2023.6.22
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2023-06-22T08:17:45+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jun 22, 2023
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2023.6.21/">
                <p class="release__version">
                  2023.6.21
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2023-06-21T04:10:08+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jun 21, 2023
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2023.3.4/">
                <p class="release__version">
                  2023.3.4
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2023-03-04T22:25:40+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 4, 2023
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2023.3.3/">
                <p class="release__version">
                  2023.3.3
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2023-03-03T21:42:20+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 3, 2023
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2023.2.17/">
                <p class="release__version">
                  2023.2.17
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2023-02-17T12:33:53+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Feb 17, 2023
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2023.1.6/">
                <p class="release__version">
                  2023.1.6
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2023-01-06T21:23:54+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jan 6, 2023
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2023.1.2/">
                <p class="release__version">
                  2023.1.2
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2023-01-02T14:46:42+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jan 2, 2023
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.11.11/">
                <p class="release__version">
                  2022.11.11
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-11-11T10:40:55+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Nov 11, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.10.4/">
                <p class="release__version">
                  2022.10.4
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-10-04T04:52:27+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Oct 4, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.9.1/">
                <p class="release__version">
                  2022.9.1
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-09-01T11:28:04+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Sep 1, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.8.19/">
                <p class="release__version">
                  2022.8.19
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-08-19T00:13:06+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Aug 19, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.8.14/">
                <p class="release__version">
                  2022.8.14
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-08-14T22:20:33+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Aug 14, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.8.8/">
                <p class="release__version">
                  2022.8.8
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-08-08T22:17:18+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Aug 8, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.7.18/">
                <p class="release__version">
                  2022.7.18
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-07-18T00:05:51+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jul 18, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.7.17/">
                <p class="release__version">
                  2022.7.17
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-07-17T23:50:21+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jul 17, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.6.29/">
                <p class="release__version">
                  2022.6.29
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-06-29T01:43:46+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jun 29, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.6.22.1/">
                <p class="release__version">
                  2022.6.22.1
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-06-22T01:16:17+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jun 22, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.6.22/">
                <p class="release__version">
                  2022.6.22
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-06-22T00:59:56+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jun 22, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.5.18/">
                <p class="release__version">
                  2022.5.18
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-05-18T03:37:52+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  May 18, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.4.8/">
                <p class="release__version">
                  2022.4.8
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-04-08T09:57:27+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Apr 8, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.3.8.2/">
                <p class="release__version">
                  2022.3.8.2
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-03-09T01:44:07+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 9, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.3.8.1/">
                <p class="release__version">
                  2022.3.8.1
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-03-08T20:23:54+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 8, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.3.8/">
                <p class="release__version">
                  2022.3.8
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-03-08T19:57:34+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 8, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.2.4/">
                <p class="release__version">
                  2022.2.4
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-02-04T06:39:35+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Feb 4, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.2.3/">
                <p class="release__version">
                  2022.2.3
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-02-03T17:52:14+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Feb 3, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2022.1.21/">
                <p class="release__version">
                  2022.1.21
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2022-01-21T11:57:30+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jan 21, 2022
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.12.27/">
                <p class="release__version">
                  2021.12.27
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-12-27T02:31:00+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Dec 27, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.12.25/">
                <p class="release__version">
                  2021.12.25
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-12-25T00:34:34+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Dec 25, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.12.1/">
                <p class="release__version">
                  2021.12.1
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-12-01T00:23:50+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Dec 1, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.11.10.1/">
                <p class="release__version">
                  2021.11.10.1
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-11-10T01:47:31+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Nov 10, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.11.10/">
                <p class="release__version">
                  2021.11.10
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-11-10T01:14:52+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Nov 10, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.10.22/">
                <p class="release__version">
                  2021.10.22
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-10-22T20:47:36+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Oct 22, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.10.10/">
                <p class="release__version">
                  2021.10.10
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-10-10T04:03:32+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Oct 10, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.10.9/">
                <p class="release__version">
                  2021.10.9
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-10-09T19:11:40+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Oct 9, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.9.25/">
                <p class="release__version">
                  2021.9.25
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-09-25T01:00:17+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Sep 25, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.9.2/">
                <p class="release__version">
                  2021.9.2
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-09-02T00:02:58+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Sep 2, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.9.1/">
                <p class="release__version">
                  2021.9.1
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-09-01T23:03:41+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Sep 1, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.8.10/">
                <p class="release__version">
                  2021.8.10
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-08-10T14:44:37+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Aug 10, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.8.2/">
                <p class="release__version">
                  2021.8.2
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-08-02T05:09:36+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Aug 2, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.7.24/">
                <p class="release__version">
                  2021.7.24
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-07-24T01:36:29+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jul 24, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.7.21/">
                <p class="release__version">
                  2021.7.21
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-07-21T21:07:10+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jul 21, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.7.7/">
                <p class="release__version">
                  2021.7.7
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-07-07T00:08:04+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jul 7, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.6.23/">
                <p class="release__version">
                  2021.6.23
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-06-23T02:06:21+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jun 23, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.6.9/">
                <p class="release__version">
                  2021.6.9
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-06-09T19:55:59+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jun 9, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.6.8/">
                <p class="release__version">
                  2021.6.8
                  
                  
                  <span class="badge badge--danger">
                    yanked
                  </span>
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-06-08T20:36:02+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jun 8, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.6.1/">
                <p class="release__version">
                  2021.6.1
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-06-01T15:06:19+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jun 1, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.5.20/">
                <p class="release__version">
                  2021.5.20
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-05-20T13:52:40+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  May 20, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.5.11/">
                <p class="release__version">
                  2021.5.11
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-05-11T08:07:45+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  May 11, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.4.22/">
                <p class="release__version">
                  2021.4.22
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-04-22T11:59:07+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Apr 22, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.4.11/">
                <p class="release__version">
                  2021.4.11
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-04-11T21:53:08+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Apr 11, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.4.3/">
                <p class="release__version">
                  2021.4.3
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-04-03T22:27:20+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Apr 3, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.3.24.1/">
                <p class="release__version">
                  2021.3.24.1
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-03-24T23:08:12+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 24, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.3.24/">
                <p class="release__version">
                  2021.3.24
                  
                  
                  <span class="badge badge--danger">
                    yanked
                  </span>
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-03-24T22:51:48+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 24, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.3.21/">
                <p class="release__version">
                  2021.3.21
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-03-21T21:28:17+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 21, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.3.15/">
                <p class="release__version">
                  2021.3.15
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-03-15T00:28:21+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 15, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.3.7/">
                <p class="release__version">
                  2021.3.7
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-03-07T18:38:41+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 7, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.3.3.2/">
                <p class="release__version">
                  2021.3.3.2
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-03-03T11:07:14+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 3, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.3.3.1/">
                <p class="release__version">
                  2021.3.3.1
                  
                  
                  <span class="badge badge--danger">
                    yanked
                  </span>
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-03-03T11:00:30+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 3, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.3.3/">
                <p class="release__version">
                  2021.3.3
                  
                  
                  <span class="badge badge--danger">
                    yanked
                  </span>
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-03-03T10:56:09+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 3, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.3.1/">
                <p class="release__version">
                  2021.3.1
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-03-01T00:11:37+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Mar 1, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.2.24/">
                <p class="release__version">
                  2021.2.24
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-02-24T21:13:22+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Feb 24, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.2.19/">
                <p class="release__version">
                  2021.2.19
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-02-19T21:47:23+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Feb 19, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.2.15/">
                <p class="release__version">
                  2021.2.15
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-02-15T22:50:44+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Feb 15, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.2.9/">
                <p class="release__version">
                  2021.2.9
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-02-09T20:01:08+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Feb 9, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.2.4/">
                <p class="release__version">
                  2021.2.4
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-02-04T23:24:34+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Feb 4, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.1.29/">
                <p class="release__version">
                  2021.1.29
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-01-29T17:58:51+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jan 29, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.1.24.post1/">
                <p class="release__version">
                  2021.1.24.post1
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-01-24T20:12:08+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jan 24, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.1.24/">
                <p class="release__version">
                  2021.1.24
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-01-24T16:04:28+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jan 24, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.1.20/">
                <p class="release__version">
                  2021.1.20
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-01-20T21:26:54+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jan 20, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.1.16/">
                <p class="release__version">
                  2021.1.16
                  
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-01-16T18:57:39+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jan 16, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.1.15.post1/">
                <p class="release__version">
                  2021.1.15.post1
                  
                  
                  <span class="badge badge--danger">
                    yanked
                  </span>
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-01-15T18:58:23+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jan 15, 2021
</time>
                </p>
              </a>
            </div>
            
            
            <div class="release release--oldest">
              <div class="release__meta">
                
              </div>

              <div class="release__graphic">
                
                <div class="release__line"></div>
                
                
                <img class="release__node" alt="" src="https://pypi.org/static/images/white-cube.2351a86c.svg">
                
              </div>

              <a class="card release__card" href="/project/yt-dlp/2021.1.15/">
                <p class="release__version">
                  2021.1.15
                  
                  
                  <span class="badge badge--danger">
                    yanked
                  </span>
                  
                </p>
                <p class="release__version-date">
                  <time datetime="2021-01-15T18:36:24+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jan 15, 2021
</time>
                </p>
              </a>
            </div>
            
          </div>
        </div>

        
          
          <div id="files" data-project-tabs-target="content" class="vertical-tabs__content" role="tabpanel" aria-labelledby="files-tab mobile-files-tab" tabindex="-1">
            <h2 class="page-title">Download files</h2>
            <p>Download the file for your platform. If you're not sure which to choose, learn more about <a href="https://packaging.python.org/installing/" title="External link" target="_blank" rel="noopener">installing packages</a>.</p>
            <h3>
              Source Distribution
            </h3>

            
              
    <div class="file">
      <div class="file__graphic">
        <i class="far fa-file" aria-hidden="true"></i>
      </div>

      <div class="card file__card">
        <a href="https://files.pythonhosted.org/packages/db/c5/e08a7aa42c962d34201151fa6b825fed7fbb998a1b612f37c7eb93a7e764/yt-dlp-2023.7.6.tar.gz">
          yt-dlp-2023.7.6.tar.gz
        </a>
        (2.7 MB
        <a href="#copy-hash-modal-e89aa2f4-903d-440c-9aca-7cd771d92fc5">view hashes</a>)
        <p class="file__meta">
          Uploaded <time datetime="2023-07-06T19:04:25+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jul 6, 2023
</time>
          
          
          <code>source</code>
          
          
        </p>
      </div>
    </div>
  
            

            
            <h3>
              Built Distribution
            </h3>

            
    <div class="file">
      <div class="file__graphic">
        <i class="far fa-file" aria-hidden="true"></i>
      </div>

      <div class="card file__card">
        <a href="https://files.pythonhosted.org/packages/5c/da/ef08140cea3392288a8f6cd60f6f12510a4c5776eead53e90151f139af19/yt_dlp-2023.7.6-py2.py3-none-any.whl">
          yt_dlp-2023.7.6-py2.py3-none-any.whl
        </a>
        (3.0 MB
        <a href="#copy-hash-modal-5168ec1a-aff8-4ebe-9e48-da4483ce848e">view hashes</a>)
        <p class="file__meta">
          Uploaded <time datetime="2023-07-06T19:04:21+0000" data-controller="localized-time" data-localized-time-relative="true" data-localized-time-show-time="false">
  Jul 6, 2023
</time>
          
          
          <code>py2</code>
          
          <code>py3</code>
          
          
        </p>
      </div>
    </div>
  
            
          </div>

          
          <div id="copy-hash-modal-e89aa2f4-903d-440c-9aca-7cd771d92fc5" class="modal modal--wide">
  <div class="modal__content" role="dialog">
    <a href="#modal-close" title="Close" class="modal__close">
      <i class="fa fa-times" aria-hidden="true"></i>
      <span class="sr-only">Close</span>
    </a>
    <div class="modal__body">
      <h3 class="modal__title">
        <a href="https://pip.pypa.io/en/stable/cli/pip_install/#hash-checking-mode" title="External link" target="_blank" rel="noopener">Hashes</a> for yt-dlp-2023.7.6.tar.gz
      </h3>
      <table class="table table--hashes">
        <caption class="sr-only">Hashes for yt-dlp-2023.7.6.tar.gz</caption>
        <thead>
          <tr>
            <th scope="col">Algorithm</th>
            <th scope="col">Hash digest</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <tr data-controller="clipboard">
            <th scope="row">SHA256</th>
            <td><code data-clipboard-target="source">cb58373869c8ccb5034746f91cfccd6d25ea697090dfd6f93e9034d51eb4aed2</code></td>
            <td class="table__align-right">
              <button type="button" class="button button--small copy-tooltip copy-tooltip-w" data-action="clipboard#copy" data-clipboard-target="tooltip" data-clipboard-tooltip-value="Copy to clipboard">
                Copy
              </button>
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">MD5</th>
            <td><code data-clipboard-target="source">372ce1158fb35d6aeaf61e1a2ffdf0d3</code></td>
            <td class="table__align-right">
              <button type="button" class="button button--small copy-tooltip copy-tooltip-w" data-action="clipboard#copy" data-clipboard-target="tooltip" data-clipboard-tooltip-value="Copy to clipboard">
                Copy
              </button>
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">BLAKE2b-256</th>
            <td><code data-clipboard-target="source">dbc5e08a7aa42c962d34201151fa6b825fed7fbb998a1b612f37c7eb93a7e764</code></td>
            <td class="table__align-right">
              <button type="button" class="button button--small copy-tooltip copy-tooltip-w" data-action="clipboard#copy" data-clipboard-target="tooltip" data-clipboard-tooltip-value="Copy to clipboard">
                Copy
              </button>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class="modal__footer">
      <a href="#modal-close" class="button button--primary modal__action">Close</a>
    </div>
  </div>
</div>
          
          <div id="copy-hash-modal-5168ec1a-aff8-4ebe-9e48-da4483ce848e" class="modal modal--wide">
  <div class="modal__content" role="dialog">
    <a href="#modal-close" title="Close" class="modal__close">
      <i class="fa fa-times" aria-hidden="true"></i>
      <span class="sr-only">Close</span>
    </a>
    <div class="modal__body">
      <h3 class="modal__title">
        <a href="https://pip.pypa.io/en/stable/cli/pip_install/#hash-checking-mode" title="External link" target="_blank" rel="noopener">Hashes</a> for yt_dlp-2023.7.6-py2.py3-none-any.whl
      </h3>
      <table class="table table--hashes">
        <caption class="sr-only">Hashes for yt_dlp-2023.7.6-py2.py3-none-any.whl</caption>
        <thead>
          <tr>
            <th scope="col">Algorithm</th>
            <th scope="col">Hash digest</th>
            <th></th>
          </tr>
        </thead>
        <tbody>
          <tr data-controller="clipboard">
            <th scope="row">SHA256</th>
            <td><code data-clipboard-target="source">b33b3f68751f33dd8290f1f61f7a011679b3b512aa223df3bff496688bc0bd19</code></td>
            <td class="table__align-right">
              <button type="button" class="button button--small copy-tooltip copy-tooltip-w" data-action="clipboard#copy" data-clipboard-target="tooltip" data-clipboard-tooltip-value="Copy to clipboard">
                Copy
              </button>
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">MD5</th>
            <td><code data-clipboard-target="source">56a1abb6759b6ef4f5f79733573c9149</code></td>
            <td class="table__align-right">
              <button type="button" class="button button--small copy-tooltip copy-tooltip-w" data-action="clipboard#copy" data-clipboard-target="tooltip" data-clipboard-tooltip-value="Copy to clipboard">
                Copy
              </button>
            </td>
          </tr>
          <tr data-controller="clipboard">
            <th scope="row">BLAKE2b-256</th>
            <td><code data-clipboard-target="source">5cdaef08140cea3392288a8f6cd60f6f12510a4c5776eead53e90151f139af19</code></td>
            <td class="table__align-right">
              <button type="button" class="button button--small copy-tooltip copy-tooltip-w" data-action="clipboard#copy" data-clipboard-target="tooltip" data-clipboard-tooltip-value="Copy to clipboard">
                Copy
              </button>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class="modal__footer">
      <a href="#modal-close" class="button button--primary modal__action">Close</a>
    </div>
  </div>
</div>
          

        
      </div>
    </div>
  </div>
</div>

    </main>

    <footer class="footer">
      <div class="footer__logo">
        <img src="/static/images/white-cube.2351a86c.svg" alt="" class="-js-white-cube">
      </div>

      <div class="footer__menus">
        <div class="footer__menu">
          <h2>Help</h2>
          <nav aria-label="Help navigation">
            <ul>
              <li><a href="https://packaging.python.org/installing/" title="External link" target="_blank" rel="noopener">Installing packages</a></li>
              <li><a href="https://packaging.python.org/tutorials/packaging-projects/" title="External link" target="_blank" rel="noopener">Uploading packages</a></li>
              <li><a href="https://packaging.python.org/" title="External link" target="_blank" rel="noopener">User guide</a></li>
              <li><a href="https://www.python.org/dev/peps/pep-0541/" title="External link" target="_blank" rel="noopener">Project name retention</a></li>
              <li><a href="/help/">FAQs</a></li>
            </ul>
          </nav>
        </div>

        <div class="footer__menu">
          <h2>About PyPI</h2>
          <nav aria-label="About PyPI navigation">
            <ul>
              <li><a href="https://twitter.com/PyPI" title="External link" target="_blank" rel="noopener">PyPI on Twitter</a></li>
              <li><a href="https://dtdg.co/pypi" title="External link" target="_blank" rel="noopener">Infrastructure dashboard</a></li>
              <li><a href="/stats/">Statistics</a></li>
              <li><a href="/trademarks/">Logos & trademarks</a></li>
              <li><a href="/sponsors/">Our sponsors</a></li>
            </ul>
          </nav>
        </div>

        <div class="footer__menu">
          <h2>Contributing to PyPI</h2>
          <nav aria-label="How to contribute navigation">
            <ul>
              <li><a href="/help/#feedback">Bugs and feedback</a></li>
              <li><a href="https://github.com/pypi/warehouse" title="External link" target="_blank" rel="noopener">Contribute on GitHub</a></li>
              <li><a href="https://hosted.weblate.org/projects/pypa/warehouse/" title="External link" target="_blank" rel="noopener">Translate PyPI</a></li>
              <li><a href="/sponsors/">Sponsor PyPI</a></li>
              <li><a href="https://github.com/pypi/warehouse/graphs/contributors" title="External link" target="_blank" rel="noopener">Development credits</a></li>
            </ul>
          </nav>
        </div>

        <div class="footer__menu">
          <h2>Using PyPI</h2>
          <nav aria-label="Using PyPI navigation">
            <ul>
              <li><a href="https://github.com/pypa/.github/blob/main/CODE_OF_CONDUCT.md" title="External link" target="_blank" rel="noopener">Code of conduct</a></li>
              <li><a href="/security/">Report security issue</a></li>
              <li><a href="https://www.python.org/privacy/" title="External link" target="_blank" rel="noopener">Privacy policy</a></li>
              <li><a href="/policy/terms-of-use/">Terms of use</a></li>
              <li><a href="/policy/acceptable-use-policy/">Acceptable Use Policy</a></li>
            </ul>
          </nav>
        </div>
      </div>

      <hr class="footer__divider">

      <div class="footer__text">
        
        <p>Status:<a href="https://status.python.org/" title="External link" target="_blank" rel="noopener">
          <span data-statuspage-domain="https://2p66nmmycsj3.statuspage.io">all systems operational</span></a>
        </p>
        
        <p>
          Developed and maintained by the Python community, for the Python community.
          <br>
          <a href="https://donate.pypi.org">Donate today!</a>
        </p>
        <p>
          
"PyPI", "Python Package Index", and the blocks logos are registered <a href="/trademarks/">trademarks</a> of the <a href="https://python.org/psf-landing" target="_blank" rel="noopener">Python Software Foundation</a>.
<br>
        </p>
        <p>
          © 2023 <a href="https://www.python.org/psf-landing/" title="External link" target="_blank" rel="noopener">Python Software Foundation</a><br>
          <a href="/sitemap/">Site map</a>
        </p>
      </div>

      <div class="centered hide-on-desktop">
        <button type="button" class="button button--switch-to-desktop hidden" data-viewport-toggle-target="switchToDesktop" data-action="viewport-toggle#switchToDesktop">
          Switch to desktop version
        </button>
      </div>
    </footer>


    <div class="language-switcher">
      <form action="/locale/">
        <ul>
          
          <li>
            <button
              
              class="language-switcher__selected"
              
              name="locale_id" value="en" type="submit"
            >
              English
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="es" type="submit"
            >
              español
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="fr" type="submit"
            >
              français
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="ja" type="submit"
            >
              日本語
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="pt_BR" type="submit"
            >
              português (Brasil)
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="uk" type="submit"
            >
              українська
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="el" type="submit"
            >
              Ελληνικά
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="de" type="submit"
            >
              Deutsch
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="zh_Hans" type="submit"
            >
              中文 (简体)
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="zh_Hant" type="submit"
            >
              中文 (繁體)
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="ru" type="submit"
            >
              русский
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="he" type="submit"
            >
              עברית
            </button>
          </li>
          
          <li>
            <button
              
              name="locale_id" value="eo" type="submit"
            >
              esperanto
            </button>
          </li>
          
        </ul>
      </form>
    </div>


    <div class="sponsors">
  <p class="sponsors__title">Supported by</p>
  <div class="sponsors__divider"></div>
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
        <a class="sponsors__sponsor" target="_blank" rel="noopener" href="https://aws.amazon.com/">
          <img class=sponsors__image src="https://pypi-camo.global.ssl.fastly.net/ed7074cadad1a06f56bc520ad9bd3e00d0704c5b/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6177732d77686974652d6c6f676f2d7443615473387a432e706e67" alt=AWS loading=lazy>
          <span class="sponsors__name">AWS</span>
          <span class="sponsors__service">
          
          
            Cloud computing and Security Sponsor
          
          </span>
        </a>
      
    
  
    
    
  
    
    
      
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
        <a class="sponsors__sponsor" target="_blank" rel="noopener" href="https://www.datadoghq.com/">
          <img class=sponsors__image src="https://pypi-camo.global.ssl.fastly.net/8855f7c063a3bdb5b0ce8d91bfc50cf851cc5c51/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f64617461646f672d77686974652d6c6f676f2d6668644c4e666c6f2e706e67" alt=Datadog loading=lazy>
          <span class="sponsors__name">Datadog</span>
          <span class="sponsors__service">
          
          
            Monitoring
          
          </span>
        </a>
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
    
  
    
    
      
      
    
  
    
    
  
    
    
      
      
        <a class="sponsors__sponsor" target="_blank" rel="noopener" href="https://www.fastly.com/">
          <img class=sponsors__image src="https://pypi-camo.global.ssl.fastly.net/df6fe8829cbff2d7f668d98571df1fd011f36192/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f666173746c792d77686974652d6c6f676f2d65684d3077735f6f2e706e67" alt=Fastly loading=lazy>
          <span class="sponsors__name">Fastly</span>
          <span class="sponsors__service">
          
          
            CDN
          
          </span>
        </a>
      
    
  
    
    
  
    
    
      
      
        <a class="sponsors__sponsor" target="_blank" rel="noopener" href="https://careers.google.com/">
          <img class=sponsors__image src="https://pypi-camo.global.ssl.fastly.net/420cc8cf360bac879e24c923b2f50ba7d1314fb0/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f676f6f676c652d77686974652d6c6f676f2d616734424e3774332e706e67" alt=Google loading=lazy>
          <span class="sponsors__name">Google</span>
          <span class="sponsors__service">
          
          
            Download Analytics
          
          </span>
        </a>
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
        <a class="sponsors__sponsor" target="_blank" rel="noopener" href="https://www.python.org/psf/sponsors/#microsoft">
          <img class=sponsors__image src="https://pypi-camo.global.ssl.fastly.net/524d1ce72f7772294ca4c1fe05d21dec8fa3f8ea/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f6d6963726f736f66742d77686974652d6c6f676f2d5a443172685444462e706e67" alt=Microsoft loading=lazy>
          <span class="sponsors__name">Microsoft</span>
          <span class="sponsors__service">
          
          
            PSF Sponsor
          
          </span>
        </a>
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
        <a class="sponsors__sponsor" target="_blank" rel="noopener" href="https://www.pingdom.com/">
          <img class=sponsors__image src="https://pypi-camo.global.ssl.fastly.net/d01053c02f3a626b73ffcb06b96367fdbbf9e230/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f70696e67646f6d2d77686974652d6c6f676f2d67355831547546362e706e67" alt=Pingdom loading=lazy>
          <span class="sponsors__name">Pingdom</span>
          <span class="sponsors__service">
          
          
            Monitoring
          
          </span>
        </a>
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
    
  
    
    
  
    
    
  
    
    
      
      
        <a class="sponsors__sponsor" target="_blank" rel="noopener" href="https://getsentry.com/for/python">
          <img class=sponsors__image src="https://pypi-camo.global.ssl.fastly.net/67af7117035e2345bacb5a82e9aa8b5b3e70701d/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f73656e7472792d77686974652d6c6f676f2d4a2d6b64742d706e2e706e67" alt=Sentry loading=lazy>
          <span class="sponsors__name">Sentry</span>
          <span class="sponsors__service">
          
          
            Error logging
          
          </span>
        </a>
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
      
      
        <a class="sponsors__sponsor" target="_blank" rel="noopener" href="https://statuspage.io">
          <img class=sponsors__image src="https://pypi-camo.global.ssl.fastly.net/b611884ff90435a0575dbab7d9b0d3e60f136466/68747470733a2f2f73746f726167652e676f6f676c65617069732e636f6d2f707970692d6173736574732f73706f6e736f726c6f676f732f737461747573706167652d77686974652d6c6f676f2d5467476c6a4a2d502e706e67" alt=StatusPage loading=lazy>
          <span class="sponsors__name">StatusPage</span>
          <span class="sponsors__service">
          
          
            Status page
          
          </span>
        </a>
      
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
    
    
  
</div>

    
  </body>

</html>
